" This file was generated by TPluginScan.
if g:tplugin_autoload == 2 && g:loaded_tplugin != 100 | throw "TPluginScan:Outdated" | endif
call TPluginDependencies('tskeleton_vim', ['tlib_vim'])
call TPluginDependencies('vim-session', ['vim-misc'])
call TPluginDependencies('vim-shell', ['vim-misc'])
call TPluginDependencies('vim-snipmate', ['vim-addon-mw-utils', 'tlib'])
augroup filetypedetect
au BufNewFile,BufRead *.clj setf clojure
au BufNewFile,BufRead *.cljs setf clojure

augroup END
augroup filetypedetect
" recognize .snippet files
if has("autocmd")
    autocmd BufNewFile,BufRead *.snippets setf snippets
endif
augroup END
augroup filetypedetect
" This has to be called before ftplugins are loaded. Therefore 
" it is here in ftdetect though it maybe shouldn't
if has("autocmd")
   autocmd FileType * call UltiSnips_FileTypeChanged()
endif

augroup END
augroup filetypedetect
autocmd BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery
augroup END
augroup filetypedetect
autocmd BufNewFile,BufRead *.json set filetype=json
autocmd BufNewFile,BufRead *.jsonp set filetype=json
augroup END
augroup filetypedetect
autocmd BufNewFile,BufRead *.less setf less
augroup END
augroup filetypedetect
" markdown filetype file
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=mkd
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}.{des3,des,bf,bfa,aes,idea,cast,rc2,rc4,rc5,desx} set filetype=mkd
augroup END
augroup filetypedetect
" Vim ftdetect plugin file
" Language:     MSBuild
" Maintainer:   Heath Stewart <heaths@outlook.com>
" Version:      1.0
" Repository:   https://github.com/heaths/vim-msbuild
" Vimball:      http://www.vim.org/scripts/script.php?script_id=4422

" Override the default file type setting.
au BufNewFile,BufRead *.*proj,*.props,*.targets set ft=msbuild
augroup END
augroup filetypedetect
" Stylus
autocmd BufNewFile,BufReadPost *.styl set filetype=stylus
autocmd BufNewFile,BufReadPost *.stylus set filetype=stylus
augroup END
augroup filetypedetect
au BufRead,BufNewFile *.xpt.vim set filetype=xpt.vim
augroup END
call TPluginRegisterRepo('AutoAlign')
call TPluginRegisterRepo('bash-support')
call TPluginRegisterRepo('bash-support.vim')
call TPluginRegisterRepo('c.vim')
call TPluginRegisterRepo('ccimpl.vim')
call TPluginRegisterRepo('Decho')
call TPluginRegisterRepo('git-vim')
call TPluginRegisterRepo('html5.vim')
call TPluginRegisterRepo('indenthtml.vim')
call TPluginRegisterRepo('jedi-vim')
call TPluginRegisterRepo('nerdtree')
call TPluginRegisterRepo('Omnisharp')
call TPluginRegisterRepo('pydoc.vim')
call TPluginRegisterRepo('pyflakes-pathogen')
call TPluginRegisterRepo('pytest.vim')
call TPluginRegisterRepo('rope-omni')
call TPluginRegisterRepo('rope-vim')
call TPluginRegisterRepo('slimv.vim')
call TPluginRegisterRepo('sqlserver.vim')
call TPluginRegisterRepo('tagbar')
call TPluginRegisterRepo('tskeleton_vim')
call TPluginRegisterRepo('ultisnips')
call TPluginRegisterRepo('vcscommand.vim')
call TPluginRegisterRepo('vim-csharp')
call TPluginRegisterRepo('vim-flake8')
call TPluginRegisterRepo('vim-jquery')
call TPluginRegisterRepo('vim-json')
call TPluginRegisterRepo('vim-less')
call TPluginRegisterRepo('vim-markdown')
call TPluginRegisterRepo('vim-msbuild')
call TPluginRegisterRepo('vim-perl')
call TPluginRegisterRepo('vim-snipmate')
call TPluginRegisterRepo('vim-stylus')
call TPluginRegisterRepo('vimshell')
call TPluginRegisterRepo('vimtlib')
call TPluginRegisterRepo('vundle')
call TPluginRegisterRepo('xmledit')
call TPluginRegisterRepo('xpt')
call TPluginRegisterRepo('xqueryvim')
call TPluginFiletype('mkd', ['vim-markdown'])
call TPluginFiletype('tskeleton', ['tskeleton_vim'])
call TPluginFiletype('dot', ['xpt'])
call TPluginFiletype('gnuplot', ['xpt'])
call TPluginFiletype('snippets', ['vim-snipmate', 'ultisnips'])
call TPluginFiletype('svkannotate', ['vcscommand.vim'])
call TPluginFiletype('maple', ['AutoAlign', 'vundle'])
call TPluginFiletype('lisp', ['slimv.vim'])
call TPluginFiletype('cvsannotate', ['vcscommand.vim'])
call TPluginFiletype('ada', ['xpt'])
call TPluginFiletype('vimshell', ['vimshell'])
call TPluginFiletype('stylus', ['vim-stylus'])
call TPluginFiletype('lua', ['xpt'])
call TPluginFiletype('sqlserver', ['sqlserver.vim'])
call TPluginFiletype('UltiSnips', ['ultisnips'])
call TPluginFiletype('xslt', ['xpt'])
call TPluginFiletype('clojure', ['slimv.vim'])
call TPluginFiletype('xml', ['xmledit', 'xpt'])
call TPluginFiletype('_func', ['xpt'])
call TPluginFiletype('ocaml', ['xpt'])
call TPluginFiletype('java', ['xpt'])
call TPluginFiletype('javascript', ['html5.vim', 'xpt'])
call TPluginFiletype('_common', ['xpt'])
call TPluginFiletype('_preprocessor', ['xpt'])
call TPluginFiletype('lex', ['xpt'])
call TPluginFiletype('zsh', ['xpt'])
call TPluginFiletype('gitconfig', ['xpt'])
call TPluginFiletype('tt2html', ['vim-perl'])
call TPluginFiletype('conque_term', ['vundle'])
call TPluginFiletype('factor', ['xpt'])
call TPluginFiletype('ruby', ['xpt'])
call TPluginFiletype('xquery', ['xqueryvim'])
call TPluginFiletype('slimv-cljapi', ['slimv.vim'])
call TPluginFiletype('yacc', ['xpt'])
call TPluginFiletype('_loops', ['xpt'])
call TPluginFiletype('gitannotate', ['vcscommand.vim'])
call TPluginFiletype('cmake', ['xpt'])
call TPluginFiletype('unknown', ['xpt'])
call TPluginFiletype('tt2', ['vim-perl'])
call TPluginFiletype('eruby', ['xpt'])
call TPluginFiletype('xptest', ['xpt'])
call TPluginFiletype('git-status', ['git-vim'])
call TPluginFiletype('_comment', ['xpt'])
call TPluginFiletype('Decho', ['Decho', 'vundle'])
call TPluginFiletype('objc', ['xpt'])
call TPluginFiletype('xpt', ['xpt'])
call TPluginFiletype('slimv-clhs', ['slimv.vim'])
call TPluginFiletype('c', ['AutoAlign', 'c.vim', 'xpt', 'vundle'])
call TPluginFiletype('nerdtree', ['nerdtree'])
call TPluginFiletype('_printf', ['xpt'])
call TPluginFiletype('actionscript', ['xpt'])
call TPluginFiletype('php', ['xmledit', 'xpt'])
call TPluginFiletype('scheme', ['xpt', 'slimv.vim'])
call TPluginFiletype('python_pydoc', ['pydoc.vim'])
call TPluginFiletype('help', ['xpt'])
call TPluginFiletype('r', ['xpt'])
call TPluginFiletype('cabal', ['xpt'])
call TPluginFiletype('rst', ['xpt'])
call TPluginFiletype('cg', ['xpt'])
call TPluginFiletype('xptemplate', ['xpt'])
call TPluginFiletype('sql', ['xpt'])
call TPluginFiletype('int-termtter', ['vimshell'])
call TPluginFiletype('ps1', ['xpt'])
call TPluginFiletype('xhtml', ['xmledit', 'xpt'])
call TPluginFiletype('cs', ['Omnisharp', 'vim-csharp', 'xpt'])
call TPluginFiletype('vcscommit', ['vcscommand.vim'])
call TPluginFiletype('git-log', ['git-vim'])
call TPluginFiletype('msbuild', ['vim-msbuild'])
call TPluginFiletype('html', ['AutoAlign', 'indenthtml.vim', 'html5.vim', 'xmledit', 'xpt', 'vundle'])
call TPluginFiletype('cpp', ['AutoAlign', 'xpt', 'vundle'])
call TPluginFiletype('cs_omnisharp', ['Omnisharp'])
call TPluginFiletype('_structures', ['xpt'])
call TPluginFiletype('snippet', ['vim-snipmate'])
call TPluginFiletype('matlab', ['AutoAlign', 'vundle'])
call TPluginFiletype('python', ['rope-omni', 'pytest.vim', 'jedi-vim', 'xpt', 'pyflakes-pathogen', 'rope-vim'])
call TPluginFiletype('aspx', ['vim-csharp'])
call TPluginFiletype('html_snip_helper', ['vim-snipmate'])
call TPluginFiletype('hgannotate', ['vcscommand.vim'])
call TPluginFiletype('less', ['vim-less'])
call TPluginFiletype('svnannotate', ['vcscommand.vim'])
call TPluginFiletype('make', ['c.vim', 'xpt'])
call TPluginFiletype('template', ['bash-support.vim'])
call TPluginFiletype('perl', ['vim-perl', 'xpt'])
call TPluginFiletype('json', ['vim-json', 'xpt'])
call TPluginFiletype('ccimpl', ['ccimpl.vim'])
call TPluginFiletype('pod', ['vim-perl'])
call TPluginFiletype('css', ['xpt'])
call TPluginFiletype('int-earthquake', ['vimshell'])
call TPluginFiletype('sh', ['xpt', 'bash-support'])
call TPluginFiletype('tagbar', ['tagbar'])
call TPluginFiletype('_condition', ['xpt'])
call TPluginFiletype('xs', ['vim-perl'])
call TPluginFiletype('tcl', ['xpt'])
call TPluginFiletype('svg', ['xpt'])
call TPluginFiletype('markdown', ['xpt'])
call TPluginFiletype('slimv-javadoc', ['slimv.vim'])
call TPluginFiletype('perl6', ['vim-perl'])
call TPluginFiletype('haskell', ['xpt'])
call TPluginFiletype('htmldjango', ['xpt'])
call TPluginFiletype('erlang', ['xpt'])
call TPluginFiletype('tex', ['AutoAlign', 'xpt', 'vundle'])
call TPluginFiletype('vim', ['AutoAlign', 'xpt', 'vundle'])
call TPluginFiletype('bib', ['AutoAlign', 'vundle'])
call TPluginFiletype('jquery', ['vim-jquery'])
call TPluginFiletype('python_flake8', ['vim-flake8'])
call TPluginFiletype('cshtml', ['vim-csharp'])
call TPluginFiletype('vimshrc', ['vimshell'])
call TPluginFiletype('bbcode', ['vimtlib'])
call TPluginFiletype('git-diff', ['git-vim'])
call TPluginFiletype('slimv', ['slimv.vim'])
call TPluginFiletype('tt2js', ['vim-perl'])
call TPluginAutoload('argumentrewrap', ['argumentrewrap', '.'])
call TPluginAutoload('acp', ['AutoComplPop', '.'])
call TPluginAutoload('mmtemplates#core', ['bash-support.vim', '.'])
call TPluginAutoload('colorv#cache', ['colorv.vim', '.'])
call TPluginAutoload('colorv#data', ['colorv.vim', '.'])
call TPluginAutoload('colorv#mark', ['colorv.vim', '.'])
call TPluginAutoload('colorv#scheme', ['colorv.vim', '.'])
call TPluginAutoload('colorv#win', ['colorv.vim', '.'])
call TPluginAutoload('colorv', ['colorv.vim', '.'])
call TPluginAutoload('csapprox#common', ['CSApprox', '.'])
call TPluginAutoload('csapprox#per_component', ['CSApprox', '.'])
call TPluginAutoload('csapprox', ['CSApprox', '.'])
call TPluginAutoload('ctrlp#bookmarkdir', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#buffertag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#changes', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#dir', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#line', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#mixed', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#mrufiles', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#quickfix', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#rtscript', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#tag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#undo', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#utils', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp', ['ctrlp.vim', '.'])
call TPluginAutoload('dbext', ['dbext.vim', '.'])
call TPluginAutoload('dbext_dbi', ['dbext.vim', '.'])
call TPluginAutoload('delimitMate', ['delimitMate', '.'])
call TPluginAutoload('dfrank#util', ['DfrankUtil', '.'])
call TPluginAutoload('fuf#bookmarkdir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#bookmarkfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#buffer', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#buffertag', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#callbackfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#callbackitem', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#changelist', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#coveragefile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#dir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#file', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givencmd', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givendir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givenfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#help', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#jumplist', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#line', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#mrucmd', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#mrufile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#quickfix', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#tag', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#taggedfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf', ['FuzzyFinder', '.'])
call TPluginAutoload('galaxy', ['galaxy.vim', '.'])
call TPluginAutoload('genutils', ['genutils', '.'])
call TPluginAutoload('genutils', ['genutils-2.5', '.'])
call TPluginAutoload('gist', ['gist-vim', '.'])
call TPluginAutoload('gundo', ['gundo.vim', '.'])
call TPluginAutoload('htmlcomplete', ['html5.vim', '.'])
call TPluginAutoload('xml#aria', ['html5.vim', '.'])
call TPluginAutoload('xml#html5', ['html5.vim', '.'])
call TPluginAutoload('jslibsyntax', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.html', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#sugar.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#sugar.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#sugar.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#sugar.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('jedi', ['jedi-vim', '.'])
call TPluginAutoload('jsoncodecs', ['jsoncodecs.vim', '.'])
call TPluginAutoload('javascript#runtime', ['jsruntime.vim', '.'])
call TPluginAutoload('l9#async', ['L9', '.'])
call TPluginAutoload('l9#quickfix', ['L9', '.'])
call TPluginAutoload('l9#tempbuffer', ['L9', '.'])
call TPluginAutoload('l9#tempvariables', ['L9', '.'])
call TPluginAutoload('l9', ['L9', '.'])
call TPluginAutoload('lisper', ['lisper-vim', '.'])
call TPluginAutoload('nerdtree', ['nerdtree', '.'])
call TPluginAutoload('findsymbols', ['Omnisharp', '.'])
call TPluginAutoload('findtype', ['Omnisharp', '.'])
call TPluginAutoload('OmniSharp', ['Omnisharp', '.'])
call TPluginAutoload('quickfixsigns#breakpoints', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns#marks', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns#vcsdiff', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns', ['quickfixsigns', '.'])
call TPluginAutoload('tinykeymap#map#quickfixsigns', ['quickfixsigns', '.'])
call TPluginAutoload('xolox#misc#buffer', ['shell', '.'])
call TPluginAutoload('xolox#misc#complete', ['shell', '.'])
call TPluginAutoload('xolox#misc#escape', ['shell', '.'])
call TPluginAutoload('xolox#misc#list', ['shell', '.'])
call TPluginAutoload('xolox#misc#msg', ['shell', '.'])
call TPluginAutoload('xolox#misc#open', ['shell', '.'])
call TPluginAutoload('xolox#misc#option', ['shell', '.'])
call TPluginAutoload('xolox#misc#os', ['shell', '.'])
call TPluginAutoload('xolox#misc#path', ['shell', '.'])
call TPluginAutoload('xolox#misc#str', ['shell', '.'])
call TPluginAutoload('xolox#misc#timer', ['shell', '.'])
call TPluginAutoload('xolox#shell', ['shell', '.'])
call TPluginAutoload('SQLUtilities', ['SQLUtilities', '.'])
call TPluginAutoload('stakeholders#delayed', ['stakeholders_vim', '.'])
call TPluginAutoload('stakeholders#immediate', ['stakeholders_vim', '.'])
call TPluginAutoload('stakeholders', ['stakeholders_vim', '.'])
call TPluginAutoload('syntastic#c', ['syntastic', '.'])
call TPluginAutoload('syntastic#makeprg', ['syntastic', '.'])
call TPluginAutoload('syntastic#postprocess', ['syntastic', '.'])
call TPluginAutoload('syntastic#util', ['syntastic', '.'])
call TPluginAutoload('tabular', ['tabular', '.'])
call TPluginAutoload('tagbar', ['tagbar', '.'])
call TPluginAutoload('templator#expander#tskel', ['templator_vim', '.'])
call TPluginAutoload('templator#expander#tvim', ['templator_vim', '.'])
call TPluginAutoload('templator', ['templator_vim', '.'])
call TPluginAutoload('tinykeymap#map#para_move', ['tlib_vim', '.'])
call TPluginAutoload('tlib#agent', ['tlib_vim', '.'])
call TPluginAutoload('tlib#arg', ['tlib_vim', '.'])
call TPluginAutoload('tlib#autocmdgroup', ['tlib_vim', '.'])
call TPluginAutoload('tlib#balloon', ['tlib_vim', '.'])
call TPluginAutoload('tlib#bitwise', ['tlib_vim', '.'])
call TPluginAutoload('tlib#buffer', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cache', ['tlib_vim', '.'])
call TPluginAutoload('tlib#char', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cmd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#comments', ['tlib_vim', '.'])
call TPluginAutoload('tlib#date', ['tlib_vim', '.'])
call TPluginAutoload('tlib#dir', ['tlib_vim', '.'])
call TPluginAutoload('tlib#eval', ['tlib_vim', '.'])
call TPluginAutoload('tlib#file', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnf', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnfd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnfx', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_fuzzy', ['tlib_vim', '.'])
call TPluginAutoload('tlib#fixes', ['tlib_vim', '.'])
call TPluginAutoload('tlib#grep', ['tlib_vim', '.'])
call TPluginAutoload('tlib#hash', ['tlib_vim', '.'])
call TPluginAutoload('tlib#hook', ['tlib_vim', '.'])
call TPluginAutoload('tlib#input', ['tlib_vim', '.'])
call TPluginAutoload('tlib#list', ['tlib_vim', '.'])
call TPluginAutoload('tlib#map', ['tlib_vim', '.'])
call TPluginAutoload('tlib#normal', ['tlib_vim', '.'])
call TPluginAutoload('tlib#notify', ['tlib_vim', '.'])
call TPluginAutoload('tlib#number', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Object', ['tlib_vim', '.'])
call TPluginAutoload('tlib#paragraph', ['tlib_vim', '.'])
call TPluginAutoload('tlib#persistent', ['tlib_vim', '.'])
call TPluginAutoload('tlib#progressbar', ['tlib_vim', '.'])
call TPluginAutoload('tlib#rx', ['tlib_vim', '.'])
call TPluginAutoload('tlib#scratch', ['tlib_vim', '.'])
call TPluginAutoload('tlib#signs', ['tlib_vim', '.'])
call TPluginAutoload('tlib#string', ['tlib_vim', '.'])
call TPluginAutoload('tlib#syntax', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tab', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tag', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Test', ['tlib_vim', '.'])
call TPluginAutoload('tlib#TestChild', ['tlib_vim', '.'])
call TPluginAutoload('tlib#textobjects', ['tlib_vim', '.'])
call TPluginAutoload('tlib#time', ['tlib_vim', '.'])
call TPluginAutoload('tlib#type', ['tlib_vim', '.'])
call TPluginAutoload('tlib#url', ['tlib_vim', '.'])
call TPluginAutoload('tlib#var', ['tlib_vim', '.'])
call TPluginAutoload('tlib#vcs', ['tlib_vim', '.'])
call TPluginAutoload('tlib#vim', ['tlib_vim', '.'])
call TPluginAutoload('tlib#win', ['tlib_vim', '.'])
call TPluginAutoload('tlib#World', ['tlib_vim', '.'])
call TPluginAutoload('tlib', ['tlib_vim', '.'])
call TPluginAutoload('tplugin#autoload#extradite', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#fugitive', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#fuzzyfinder', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#supertab', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#vcscommand', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#vcsdo', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin', ['tplugin_vim', '.'])
call TPluginAutoload('tskeleton#abbreviations', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#completefunc', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#functions', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#mini', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#omnicomplete', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#skeleton', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#snippets', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#tags', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton', ['tskeleton_vim', '.'])
call TPluginAutoload('buf_utils', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('cached_file_contents', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('env_reload', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('funcref', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('glob', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tiny_cmd', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tovl#scratch_buffer', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tovl#ui#filter_list', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('airline#builder', ['vim-airline', '.'])
call TPluginAutoload('airline#debug', ['vim-airline', '.'])
call TPluginAutoload('airline#deprecation', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#branch', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#bufferline', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#commandt', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#csv', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#ctrlp', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#default', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#eclim', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#example', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#hunks', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#quickfix', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#syntastic', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#tabline#formatters', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#tabline', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#tagbar', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#undotree', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#unite', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#virtualenv', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions#whitespace', ['vim-airline', '.'])
call TPluginAutoload('airline#extensions', ['vim-airline', '.'])
call TPluginAutoload('airline#highlighter', ['vim-airline', '.'])
call TPluginAutoload('airline#init', ['vim-airline', '.'])
call TPluginAutoload('airline#parts', ['vim-airline', '.'])
call TPluginAutoload('airline#section', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#badwolf', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#base16', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#bubblegum', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#dark', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#jellybeans', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#laederon', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#light', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#lucius', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#luna', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#molokai', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#monochrome', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#murmur', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#powerlineish', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#serene', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#simple', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#sol', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#solarized', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#tomorrow', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#ubaryd', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#understated', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#wombat', ['vim-airline', '.'])
call TPluginAutoload('airline#themes#zenburn', ['vim-airline', '.'])
call TPluginAutoload('airline#themes', ['vim-airline', '.'])
call TPluginAutoload('airline#util', ['vim-airline', '.'])
call TPluginAutoload('airline', ['vim-airline', '.'])
call TPluginAutoload('characterize', ['vim-characterize', '.'])
call TPluginAutoload('classpath', ['vim-classpath', '.'])
call TPluginAutoload('togglebg', ['vim-colors-solarized', '.'])
call TPluginAutoload('cs', ['vim-csharp', '.'])
call TPluginAutoload('dispatch#headless', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#iterm', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#screen', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#tmux', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#windows', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#x11', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch', ['vim-dispatch', '.'])
call TPluginAutoload('easy_align', ['vim-easy-align', '.'])
call TPluginAutoload('nrepl#fireplace_connection', ['vim-fireplace', '.'])
call TPluginAutoload('color_helper', ['vim-indent-guides', '.'])
call TPluginAutoload('indent_guides', ['vim-indent-guides', '.'])
call TPluginAutoload('combinerEXP', ['vim-localcomplete', '.'])
call TPluginAutoload('localcomplete', ['vim-localcomplete', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#format', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#test', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#tests', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc#version', ['vim-misc', '.'])
call TPluginAutoload('xolox#misc', ['vim-misc', '.'])
call TPluginAutoload('multiple_cursors', ['vim-multiple-cursors', '.'])
call TPluginAutoload('preview', ['vim-preview', '.'])
call TPluginAutoload('repeat', ['vim-repeat', '.'])
call TPluginAutoload('xolox#session', ['vim-session', '.'])
call TPluginAutoload('xolox#shell', ['vim-shell', '.'])
call TPluginAutoload('snipMate', ['vim-snipmate', '.'])
call TPluginAutoload('snipMate_python_demo', ['vim-snipmate', '.'])
call TPluginAutoload('vim_snippets', ['vim-snippets', '.'])
call TPluginAutoload('neocomplcache#sources#vimshell_complete', ['vimshell', '.'])
call TPluginAutoload('neocomplete#sources#vimshell', ['vimshell', '.'])
call TPluginAutoload('neocomplete#sources#vimshell_history', ['vimshell', '.'])
call TPluginAutoload('unite#kinds#vimshell_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_external_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_zsh_complete', ['vimshell', '.'])
call TPluginAutoload('vimshell#altercmd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#alias', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#bg', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#build', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#cd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#cdup', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#clear', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#dirs', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#echo', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#eval', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#exe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#exit', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#galias', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gcd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gendoc', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#h', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#histdel', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#history', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#iexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#less', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#let', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#ls', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#mkcd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#nop', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#open', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#popd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#pwd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#repeat', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#scp', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#sexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#shell', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#source', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#source_shellcmd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#ssh', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#sudo', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#texe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#time', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#view', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vim', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vimdiff', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vimsh', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#whereis', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#which', ['vimshell', '.'])
call TPluginAutoload('vimshell#complete#helper', ['vimshell', '.'])
call TPluginAutoload('vimshell#complete', ['vimshell', '.'])
call TPluginAutoload('vimshell#help', ['vimshell', '.'])
call TPluginAutoload('vimshell#history', ['vimshell', '.'])
call TPluginAutoload('vimshell#hook', ['vimshell', '.'])
call TPluginAutoload('vimshell#interactive', ['vimshell', '.'])
call TPluginAutoload('vimshell#int_mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#parser', ['vimshell', '.'])
call TPluginAutoload('vimshell#terminal', ['vimshell', '.'])
call TPluginAutoload('vimshell#term_mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#util', ['vimshell', '.'])
call TPluginAutoload('vimshell', ['vimshell', '.'])
call TPluginAutoload('vital#_5de2c28#Data#List', ['vimshell', '.'])
call TPluginAutoload('vital#_5de2c28#Prelude', ['vimshell', '.'])
call TPluginAutoload('vital#_5de2c28#Vim#Buffer', ['vimshell', '.'])
call TPluginAutoload('vital#_5de2c28#Vim#BufferManager', ['vimshell', '.'])
call TPluginAutoload('vital#_5de2c28', ['vimshell', '.'])
call TPluginAutoload('vital', ['vimshell', '.'])
call TPluginAutoload('Align', ['vundle', '.'])
call TPluginAutoload('AlignMaps', ['vundle', '.'])
call TPluginAutoload('conque_term', ['vundle', '.'])
call TPluginAutoload('vundle#config', ['vundle', '.'])
call TPluginAutoload('vundle#installer', ['vundle', '.'])
call TPluginAutoload('vundle#scripts', ['vundle', '.'])
call TPluginAutoload('vundle', ['vundle', '.'])
call TPluginAutoload('webapi#atom', ['webapi-vim', '.'])
call TPluginAutoload('webapi#base64', ['webapi-vim', '.'])
call TPluginAutoload('webapi#bit', ['webapi-vim', '.'])
call TPluginAutoload('webapi#feed', ['webapi-vim', '.'])
call TPluginAutoload('webapi#hmac', ['webapi-vim', '.'])
call TPluginAutoload('webapi#html', ['webapi-vim', '.'])
call TPluginAutoload('webapi#http', ['webapi-vim', '.'])
call TPluginAutoload('webapi#json', ['webapi-vim', '.'])
call TPluginAutoload('webapi#jsonrpc', ['webapi-vim', '.'])
call TPluginAutoload('webapi#metaWeblog', ['webapi-vim', '.'])
call TPluginAutoload('webapi#oauth', ['webapi-vim', '.'])
call TPluginAutoload('webapi#sha1', ['webapi-vim', '.'])
call TPluginAutoload('webapi#soap', ['webapi-vim', '.'])
call TPluginAutoload('webapi#ucs', ['webapi-vim', '.'])
call TPluginAutoload('webapi#xml', ['webapi-vim', '.'])
call TPluginAutoload('webapi#xmlrpc', ['webapi-vim', '.'])
call TPluginAutoload('XPpum', ['xpt', '.'])
call TPluginAutoload('XPT', ['xpt', '.'])
call TPluginAutoload('xquerycomplete', ['xqueryvim', '.'])
call TPluginRegisterRepo('ack.vim')
call TPluginRegisterPlugin('ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file Ack', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file AckAdd', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file AckFromSearch', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file LAck', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file LAckAdd', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=file AckFile', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=help AckHelp', 'ack.vim', 'ack')
call TPluginCommand('command! -bang -nargs=* -complete=help LAckHelp', 'ack.vim', 'ack')
call TPluginRegisterPlugin('AutoAlign', 'AutoAlign')
call TPluginCommand('com! -nargs=0 AA', 'AutoAlign', 'AutoAlign')
call TPluginFunction('AutoAlign', 'AutoAlign', 'AutoAlign')
call TPluginRegisterPlugin('AutoAlign', 'cecutil')
call TPluginMap('nmap <silent> <Plug>SaveWinPosn', 'AutoAlign', 'cecutil')
call TPluginMap('nmap <silent> <Plug>RestoreWinPosn', 'AutoAlign', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 SWP', 'AutoAlign', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 RWP', 'AutoAlign', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 SM', 'AutoAlign', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 RM', 'AutoAlign', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 DM', 'AutoAlign', 'cecutil')
call TPluginFunction('SaveWinPosn', 'AutoAlign', 'cecutil')
call TPluginFunction('RestoreWinPosn', 'AutoAlign', 'cecutil')
call TPluginFunction('GoWinbufnr', 'AutoAlign', 'cecutil')
call TPluginFunction('SaveMark', 'AutoAlign', 'cecutil')
call TPluginFunction('RestoreMark', 'AutoAlign', 'cecutil')
call TPluginFunction('DestroyMark', 'AutoAlign', 'cecutil')
call TPluginFunction('SaveUserMaps', 'AutoAlign', 'cecutil')
call TPluginFunction('RestoreUserMaps', 'AutoAlign', 'cecutil')
call TPluginRegisterRepo('AutoComplPop')
call TPluginRegisterPlugin('AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpEnable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpDisable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpLock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpUnlock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopEnable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopDisable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopLock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopUnlock', 'AutoComplPop', 'acp')
call TPluginRegisterPlugin('bash-support', 'bash-support')
call TPluginFunction('BASH_CheckGlobal', 'bash-support', 'bash-support')
call TPluginFunction('BASH_InitMenu', 'bash-support', 'bash-support')
call TPluginFunction('BASH_InitMenuHeader', 'bash-support', 'bash-support')
call TPluginFunction('BASH_EnvirMenus', 'bash-support', 'bash-support')
call TPluginFunction('BASH_BuiltinMenus', 'bash-support', 'bash-support')
call TPluginFunction('BASH_ShoptMenus', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Input', 'bash-support', 'bash-support')
call TPluginFunction('BASH_AdjustLineEndComm', 'bash-support', 'bash-support')
call TPluginFunction('BASH_GetLineEndCommCol', 'bash-support', 'bash-support')
call TPluginFunction('BASH_LineEndComment', 'bash-support', 'bash-support')
call TPluginFunction('BASH_MultiLineEndComments', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CommentToggle', 'bash-support', 'bash-support')
call TPluginFunction('BASH_SubstituteTag', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CommentTemplates', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CommentClassified', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CommentVimModeline', 'bash-support', 'bash-support')
call TPluginFunction('BASH_FlowControl', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CodeFunction', 'bash-support', 'bash-support')
call TPluginFunction('BASH_BuiltinComplete', 'bash-support', 'bash-support')
call TPluginFunction('BASH_help', 'bash-support', 'bash-support')
call TPluginFunction('BASH_SyntaxCheckOptions', 'bash-support', 'bash-support')
call TPluginFunction('BASH_SyntaxCheckOptionsLocal', 'bash-support', 'bash-support')
call TPluginFunction('BASH_SyntaxCheck', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Debugger', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Toggle_Gvim_Xterm', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Toggle_Gvim_Xterm_MS', 'bash-support', 'bash-support')
call TPluginFunction('BASH_MakeScriptExecutable', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Run', 'bash-support', 'bash-support')
call TPluginFunction('BASH_XtermSize', 'bash-support', 'bash-support')
call TPluginFunction('BASH_set', 'bash-support', 'bash-support')
call TPluginFunction('BASH_shopt', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CmdLineArguments', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CodeSnippets', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Hardcopy', 'bash-support', 'bash-support')
call TPluginFunction('BASH_Settings', 'bash-support', 'bash-support')
call TPluginFunction('BASH_HelpBASHsupport', 'bash-support', 'bash-support')
call TPluginFunction('BASH_InsertDateAndTime', 'bash-support', 'bash-support')
call TPluginFunction('BASH_CreateGuiMenus', 'bash-support', 'bash-support')
call TPluginFunction('BASH_ToolMenu', 'bash-support', 'bash-support')
call TPluginFunction('BASH_RemoveGuiMenus', 'bash-support', 'bash-support')
call TPluginRegisterPlugin('bash-support.vim', 'bash-support')
call TPluginFunction('BASH_EndOfLineComment', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CodeComment', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CommentCode', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_echo_comment', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_remove_echo', 'bash-support.vim', 'bash-support')
call TPluginFunction('g:BASH_RereadTemplates', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_JumpForward', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CodeSnippet', 'bash-support.vim', 'bash-support')
call TPluginCommand('command! -nargs=* -complete=file BashScriptArguments', 'bash-support.vim', 'bash-support')
call TPluginCommand('command! -nargs=* -complete=file BashArguments', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_HelpBashSupport', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SaveOption', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_RestoreOption', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ScriptCmdLineArguments', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_BashCmdLineArguments', 'bash-support.vim', 'bash-support')
call TPluginRegisterRepo('bufexplorer')
call TPluginRegisterPlugin('bufexplorer', 'bufexplorer')
call TPluginCommand('command! BufExplorer', 'bufexplorer', 'bufexplorer')
call TPluginCommand('command! BufExplorerHorizontalSplit', 'bufexplorer', 'bufexplorer')
call TPluginCommand('command! BufExplorerVerticalSplit', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorerHorizontalSplit', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorerVerticalSplit', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorer', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorer_Start', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorer_IsValid', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorer_Refresh', 'bufexplorer', 'bufexplorer')
call TPluginFunction('BufExplorer_ReSize', 'bufexplorer', 'bufexplorer')
call TPluginRegisterPlugin('c.vim', 'c')
call TPluginFunction('C_CheckGlobal', 'c.vim', 'c')
call TPluginFunction('C_InitMenus', 'c.vim', 'c')
call TPluginFunction('C_MenuTitle', 'c.vim', 'c')
call TPluginFunction('C_CIncludeMenus', 'c.vim', 'c')
call TPluginFunction('C_CIosFlagMenus', 'c.vim', 'c')
call TPluginFunction('C_Input', 'c.vim', 'c')
call TPluginFunction('C_AdjustLineEndComm', 'c.vim', 'c')
call TPluginFunction('C_GetLineEndCommCol', 'c.vim', 'c')
call TPluginFunction('C_EndOfLineComment', 'c.vim', 'c')
call TPluginFunction('C_Comment_C_SectionAll', 'c.vim', 'c')
call TPluginFunction('C_Comment_H_SectionAll', 'c.vim', 'c')
call TPluginFunction('C_CodeToCommentC', 'c.vim', 'c')
call TPluginFunction('C_CodeToCommentCpp', 'c.vim', 'c')
call TPluginFunction('C_RemoveCComment', 'c.vim', 'c')
call TPluginFunction('C_CommentToCode', 'c.vim', 'c')
call TPluginFunction('C_CommentToggle', 'c.vim', 'c')
call TPluginFunction('C_PPIf0', 'c.vim', 'c')
call TPluginFunction('C_PPIf0Remove', 'c.vim', 'c')
call TPluginFunction('C_LegalizeName', 'c.vim', 'c')
call TPluginFunction('C_CodeSnippet', 'c.vim', 'c')
call TPluginFunction('C_ForTypeComplete', 'c.vim', 'c')
call TPluginFunction('C_CodeFor', 'c.vim', 'c')
call TPluginFunction('C_ProtoPick', 'c.vim', 'c')
call TPluginFunction('C_ProtoInsert', 'c.vim', 'c')
call TPluginFunction('C_ProtoClear', 'c.vim', 'c')
call TPluginFunction('C_ProtoShow', 'c.vim', 'c')
call TPluginFunction('C_EscapeBlanks', 'c.vim', 'c')
call TPluginFunction('C_Compile', 'c.vim', 'c')
call TPluginFunction('C_CheckForMain', 'c.vim', 'c')
call TPluginFunction('C_Link', 'c.vim', 'c')
call TPluginFunction('C_Run', 'c.vim', 'c')
call TPluginFunction('C_Arguments', 'c.vim', 'c')
call TPluginFunction('C_Toggle_Gvim_Xterm', 'c.vim', 'c')
call TPluginFunction('C_XtermSize', 'c.vim', 'c')
call TPluginFunction('C_ChooseMakefile', 'c.vim', 'c')
call TPluginFunction('C_Make', 'c.vim', 'c')
call TPluginFunction('C_MakeClean', 'c.vim', 'c')
call TPluginFunction('C_MakeArguments', 'c.vim', 'c')
call TPluginFunction('C_MakeExeToRun', 'c.vim', 'c')
call TPluginFunction('C_SplintArguments', 'c.vim', 'c')
call TPluginFunction('C_SplintCheck', 'c.vim', 'c')
call TPluginFunction('C_CodeCheckArguments', 'c.vim', 'c')
call TPluginFunction('C_CodeCheck', 'c.vim', 'c')
call TPluginFunction('C_Indent', 'c.vim', 'c')
call TPluginFunction('C_HlMessage', 'c.vim', 'c')
call TPluginFunction('C_Settings', 'c.vim', 'c')
call TPluginFunction('C_Hardcopy', 'c.vim', 'c')
call TPluginFunction('C_HelpCsupport', 'c.vim', 'c')
call TPluginFunction('C_Help', 'c.vim', 'c')
call TPluginFunction('C_CreateMenusDelayed', 'c.vim', 'c')
call TPluginFunction('C_CreateGuiMenus', 'c.vim', 'c')
call TPluginFunction('C_ToolMenu', 'c.vim', 'c')
call TPluginFunction('C_RemoveGuiMenus', 'c.vim', 'c')
call TPluginFunction('C_RereadTemplates', 'c.vim', 'c')
call TPluginFunction('C_BrowseTemplateFiles', 'c.vim', 'c')
call TPluginFunction('C_CheckAndRereadTemplates', 'c.vim', 'c')
call TPluginFunction('C_ReadTemplates', 'c.vim', 'c')
call TPluginFunction('C_Style', 'c.vim', 'c')
call TPluginFunction('C_StyleList', 'c.vim', 'c')
call TPluginFunction('C_OpenFold', 'c.vim', 'c')
call TPluginFunction('C_InsertTemplate', 'c.vim', 'c')
call TPluginFunction('C_HighlightJumpTargets', 'c.vim', 'c')
call TPluginFunction('C_JumpCtrlJ', 'c.vim', 'c')
call TPluginFunction('C_ExpandUserMacros', 'c.vim', 'c')
call TPluginFunction('C_ApplyFlag', 'c.vim', 'c')
call TPluginFunction('C_ExpandSingleMacro', 'c.vim', 'c')
call TPluginFunction('C_SetSmallCommentStyle', 'c.vim', 'c')
call TPluginFunction('C_InsertMacroValue', 'c.vim', 'c')
call TPluginFunction('C_InsertDateAndTime', 'c.vim', 'c')
call TPluginFunction('C_DateAndTime', 'c.vim', 'c')
call TPluginFunction('C_InsertTemplateWrapper', 'c.vim', 'c')
call TPluginFunction('C_CFileSectionList', 'c.vim', 'c')
call TPluginFunction('C_CFileSectionListInsert', 'c.vim', 'c')
call TPluginFunction('C_HFileSectionList', 'c.vim', 'c')
call TPluginFunction('C_HFileSectionListInsert', 'c.vim', 'c')
call TPluginFunction('C_KeywordCommentList', 'c.vim', 'c')
call TPluginFunction('C_KeywordCommentListInsert', 'c.vim', 'c')
call TPluginFunction('C_SpecialCommentList', 'c.vim', 'c')
call TPluginFunction('C_SpecialCommentListInsert', 'c.vim', 'c')
call TPluginFunction('C_CleanDirNameList', 'c.vim', 'c')
call TPluginFunction('C_IncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_StdLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_C99LibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_CppLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_CppCLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_IncludesList', 'c.vim', 'c')
call TPluginFunction('C_StdLibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_C99LibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_CppLibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_CppCLibraryIncludesList', 'c.vim', 'c')
call TPluginRegisterRepo('colorv.vim')
call TPluginRegisterPlugin('colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorV', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMid', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMin', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMax', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVQuit', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVView', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVInsert', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVEdit', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVEditAll', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=1 ColorVEditTo', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVName', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=+ ColorVList', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVTurn2', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVAutoPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVNoAutoPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreviewArea', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreviewLine', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVClear', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPicker', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVScheme', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVSchemeFav', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVSchemeNew', 'colorv.vim', 'colorv')
call TPluginRegisterRepo('CSApprox')
call TPluginRegisterPlugin('CSApprox', 'CSApprox')
call TPluginCommand('command! -bang -nargs=1 -complete=file -bar CSApproxSnapshot', 'CSApprox', 'CSApprox')
call TPluginCommand('command -bang -bar CSApprox', 'CSApprox', 'CSApprox')
call TPluginRegisterRepo('Css-Pretty')
call TPluginRegisterPlugin('Css-Pretty', 'csspretty')
call TPluginFunction('Whitespace', 'Css-Pretty', 'csspretty')
call TPluginFunction('Trim', 'Css-Pretty', 'csspretty')
call TPluginFunction('CssPretty', 'Css-Pretty', 'csspretty')
call TPluginRegisterRepo('ctrlp.vim')
call TPluginRegisterPlugin('ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlP', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPMRUFiles', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBuffer', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? CtrlPLastMode', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPClearCache', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPClearAllCaches', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar ClearCtrlPCache', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar ClearAllCtrlPCaches', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPCurWD', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPCurFile', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPRoot', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPQuickfix', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPDir', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPBufTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBufTagAll', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPRTS', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPUndo', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPLine', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPChange', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPChangeAll', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPMixed', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBookmarkDir', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPBookmarkDirAdd', 'ctrlp.vim', 'ctrlp')
call TPluginRegisterRepo('dbext.vim')
call TPluginRegisterPlugin('dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ DBExecSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ DBExecSQLTopX', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBConnect', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBDisconnect', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBDisconnectAll', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBCommit', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBRollback', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBListConnections', 'dbext.vim', 'dbext')
call TPluginCommand('command! -range -nargs=0 DBExecRangeSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ Call', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ Create', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=1 DBSetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBGetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -range -nargs=0 -bang DBVarRangeAssign', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBListVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=1 -bang DBSetVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQL', 'dbext.vim', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQLTopX', 'dbext.vim', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualTopXSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursor', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderCursor', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursorTopX', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQL', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableWithWhere', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableWithWhere', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTableTopX', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTopXTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeTableAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTableAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeProcedure', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedure', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeProcedureAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedureAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBPromptForBufferParameters', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBPromptForBufferParameters', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBListColumn', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListColumn', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListProcedure', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListProcedure', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListView', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListView', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteTables', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteProcedures', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteViews', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBCheckModeline', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBOrientationToggle', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBOrientationToggle', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBHistory', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBHistory', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsOpen', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsClose', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsRefresh', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsToggleResize', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getDictionaryName', 'dbext.vim', 'dbext')
call TPluginFunction('DB_DictionaryCreate', 'dbext.vim', 'dbext')
call TPluginFunction('DB_listOption', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getListColumn', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getVisualBlock', 'dbext.vim', 'dbext')
call TPluginFunction('DB_execCmd', 'dbext.vim', 'dbext')
call TPluginRegisterPlugin('Decho', 'cecutil')
call TPluginFunction('QArgSplitter', 'Decho', 'cecutil')
call TPluginRegisterPlugin('Decho', 'Decho')
call TPluginCommand('com! -nargs=+ -complete=expression Decho', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=+ -complete=expression Dredir', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 -range=% DechoOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 -range=% DechoOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 Dhide', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 Dshow', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoMsgOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoMsgOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoRemOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoRemOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoSep', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? Dsep', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoVarOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoVarOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoTabOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoTabOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoPause', 'Decho', 'Decho')
call TPluginFunction('Decho', 'Decho', 'Decho')
call TPluginFunction('Dfunc', 'Decho', 'Decho')
call TPluginFunction('Dret', 'Decho', 'Decho')
call TPluginFunction('DechoOn', 'Decho', 'Decho')
call TPluginFunction('DechoOff', 'Decho', 'Decho')
call TPluginFunction('DechoDepth', 'Decho', 'Decho')
call TPluginFunction('Dredir', 'Decho', 'Decho')
call TPluginFunction('DechoSep', 'Decho', 'Decho')
call TPluginFunction('DechoPause', 'Decho', 'Decho')
call TPluginRegisterRepo('delimitMate')
call TPluginRegisterPlugin('delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateBS', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateCR', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateSpace', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateS-Tab', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <buffer> <Plug>delimitMateJumpMany', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateReload', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateTest', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateSwitch', 'delimitMate', 'delimitMate')
call TPluginRegisterRepo('FuzzyFinder')
call TPluginRegisterPlugin('FuzzyFinder', 'fuf')
call TPluginCommand('command! -bang -narg=0 FufEditDataFile', 'FuzzyFinder', 'fuf')
call TPluginCommand('command! -bang -narg=0 FufRenewCache', 'FuzzyFinder', 'fuf')
call TPluginRegisterRepo('galaxy.vim')
call TPluginRegisterPlugin('galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=0 Galaxy', 'galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=1 GalaxyLoad', 'galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=0 GalaxyAuto', 'galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=0 GalaxyIndent', 'galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=0 GalaxyScreen', 'galaxy.vim', 'galaxy')
call TPluginCommand('command! -nargs=0 GalaxyLittle', 'galaxy.vim', 'galaxy')
call TPluginRegisterRepo('genutils')
call TPluginRegisterPlugin('genutils', 'genutils')
call TPluginRegisterRepo('genutils-2.5')
call TPluginRegisterPlugin('genutils-2.5', 'genutils')
call TPluginRegisterRepo('gist-vim')
call TPluginRegisterPlugin('gist-vim', 'gist')
call TPluginCommand('command! -nargs=? -range=% -complete=customlist,s:CompleteArgs Gist', 'gist-vim', 'gist')
call TPluginRegisterPlugin('git-vim', 'git')
call TPluginFunction('GitBranch', 'git-vim', 'git')
call TPluginFunction('ListGitBranches', 'git-vim', 'git')
call TPluginFunction('ListGitCommits', 'git-vim', 'git')
call TPluginFunction('GitDiff', 'git-vim', 'git')
call TPluginFunction('GitStatus', 'git-vim', 'git')
call TPluginFunction('GitLog', 'git-vim', 'git')
call TPluginFunction('GitAdd', 'git-vim', 'git')
call TPluginFunction('GitCommit', 'git-vim', 'git')
call TPluginFunction('GitCheckout', 'git-vim', 'git')
call TPluginFunction('GitPush', 'git-vim', 'git')
call TPluginFunction('GitPull', 'git-vim', 'git')
call TPluginFunction('GitCatFile', 'git-vim', 'git')
call TPluginFunction('GitBlame', 'git-vim', 'git')
call TPluginFunction('GitDoCommand', 'git-vim', 'git')
call TPluginFunction('GitVimDiffMerge', 'git-vim', 'git')
call TPluginFunction('GitVimDiffMergeDone', 'git-vim', 'git')
call TPluginCommand('command! -nargs=1 -complete=customlist,ListGitCommits GitCheckout', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* -complete=customlist,ListGitCommits GitDiff', 'git-vim', 'git')
call TPluginCommand('command! GitStatus', 'git-vim', 'git')
call TPluginCommand('command! -nargs=? GitAdd', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitLog', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitCommit', 'git-vim', 'git')
call TPluginCommand('command! -nargs=1 GitCatFile', 'git-vim', 'git')
call TPluginCommand('command! -nargs=? GitBlame', 'git-vim', 'git')
call TPluginCommand('command! -nargs=+ Git', 'git-vim', 'git')
call TPluginCommand('command! GitVimDiffMerge', 'git-vim', 'git')
call TPluginCommand('command! GitVimDiffMergeDone', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitPull', 'git-vim', 'git')
call TPluginCommand('command! GitPullRebase', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitPush', 'git-vim', 'git')
call TPluginRegisterRepo('grep.vim')
call TPluginRegisterPlugin('grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Grep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Rgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepBuffer', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* Bgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepArgs', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Fgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Rfgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Egrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Regrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Agrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Ragrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file GrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepBufferAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* BgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepArgsAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file FgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RfgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file EgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RegrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file AgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RagrepAdd', 'grep.vim', 'grep')
call TPluginRegisterRepo('gundo.vim')
call TPluginRegisterPlugin('gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoToggle', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoShow', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoHide', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoRenderGraph', 'gundo.vim', 'gundo')
call TPluginRegisterRepo('hexHighlight.vim')
call TPluginRegisterPlugin('hexHighlight.vim', 'hexHighlight')
call TPluginFunction('HexHighlight', 'hexHighlight.vim', 'hexHighlight')
call TPluginRegisterRepo('IndexedSearch')
call TPluginRegisterPlugin('IndexedSearch', 'IndexedSearch')
call TPluginCommand('command! ShowSearchIndex', 'IndexedSearch', 'IndexedSearch')
call TPluginRegisterPlugin('jedi-vim', 'jedi')
call TPluginCommand('command! -nargs=1 -complete=custom,jedi#py_import_completions Pyimport', 'jedi-vim', 'jedi')
call TPluginRegisterRepo('L9')
call TPluginRegisterPlugin('L9', 'l9')
call TPluginCommand('command -nargs=* L9Assert', 'L9', 'l9')
call TPluginCommand('command -nargs=1 L9Timer', 'L9', 'l9')
call TPluginCommand('command -nargs=0 L9TimerStop', 'L9', 'l9')
call TPluginCommand('command -nargs=0 L9TimerDump', 'L9', 'l9')
call TPluginCommand('command -nargs=? L9GrepBuffer', 'L9', 'l9')
call TPluginCommand('command -nargs=? L9GrepBufferAll', 'L9', 'l9')
call TPluginRegisterRepo('lisper-vim')
call TPluginRegisterPlugin('lisper-vim', 'lisper')
call TPluginCommand('command! LisperRepl', 'lisper-vim', 'lisper')
call TPluginCommand('command! LisperEvalLine', 'lisper-vim', 'lisper')
call TPluginCommand('command! -range=% LisperEvalBuffer', 'lisper-vim', 'lisper')
call TPluginCommand('command! -range=% LisperEvalBufferWithoutOutput', 'lisper-vim', 'lisper')
call TPluginCommand('command! LisperVimBang', 'lisper-vim', 'lisper')
call TPluginRegisterRepo('matchit')
call TPluginRegisterPlugin('matchit', 'matchit')
call TPluginCommand('command! -nargs=0 MatchDebug', 'matchit', 'matchit')
call TPluginRegisterRepo('nerdcommenter')
call TPluginRegisterPlugin('nerdcommenter', 'NERD_commenter')
call TPluginFunction('NERDComment', 'nerdcommenter', 'NERD_commenter')
call TPluginMap('inoremap <silent> <plug>NERDCommenterInsert', 'nerdcommenter', 'NERD_commenter')
call TPluginMap('nnoremap <plug>NERDCommenterAltDelims', 'nerdcommenter', 'NERD_commenter')
call TPluginRegisterPlugin('nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=? -complete=dir -bar NERDTree', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=? -complete=dir -bar NERDTreeToggle', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeClose', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeMirror', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeFind', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeFocus', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeCWD', 'nerdtree', 'NERD_tree')
TPluginAfter \V\\nerdtree\\plugin\\ call TPluginVimEnter("NERDTreeHijackNetrw")
call TPluginFunction('NERDTreeAddMenuItem', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddMenuSeparator', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddSubmenu', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddKeyMap', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeRender', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeFocus', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeCWD', 'nerdtree', 'NERD_tree')
call TPluginRegisterPlugin('Omnisharp', 'OmniSharp')
call TPluginRegisterRepo('quickfixsigns')
call TPluginRegisterPlugin('quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsSet', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsDisable', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsEnable', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsToggle', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! -nargs=+ -complete=customlist,quickfixsigns#CompleteSelect QuickfixsignsSelect', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSelect', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsUpdate', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSet', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsUnique', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsBalloon', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsToggle', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsClear', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsListBufferSigns', 'quickfixsigns', 'quickfixsigns')
call TPluginRegisterRepo('refactor')
call TPluginRegisterPlugin('refactor', 'refactor')
call TPluginFunction('IntroduceConstant', 'refactor', 'refactor')
call TPluginFunction('ReorderParameters', 'refactor', 'refactor')
call TPluginFunction('RemoveParameter', 'refactor', 'refactor')
call TPluginFunction('RenameVariable', 'refactor', 'refactor')
call TPluginFunction('LocalVariableToParameter', 'refactor', 'refactor')
call TPluginFunction('ExtractMethod', 'refactor', 'refactor')
call TPluginFunction('MoveToNextVariable', 'refactor', 'refactor')
call TPluginFunction('GetCurrentVariableType', 'refactor', 'refactor')
call TPluginFunction('GetScopeIdentifierOfCurrentMethod', 'refactor', 'refactor')
call TPluginFunction('GotoBeginingBracketOfCurrentFunction', 'refactor', 'refactor')
call TPluginFunction('GetParameterListOfCurrentFunction', 'refactor', 'refactor')
call TPluginRegisterRepo('shell')
call TPluginRegisterPlugin('shell', 'shell')
call TPluginCommand('command! -bar -nargs=? -complete=file Open', 'shell', 'shell')
call TPluginCommand('command! -bar Maximize', 'shell', 'shell')
call TPluginCommand('command! -bar Fullscreen', 'shell', 'shell')
call TPluginRegisterPlugin('slimv.vim', 'paredit')
call TPluginFunction('PareditInitBuffer', 'slimv.vim', 'paredit')
call TPluginFunction('PareditOpfunc', 'slimv.vim', 'paredit')
call TPluginFunction('PareditSetDelete', 'slimv.vim', 'paredit')
call TPluginFunction('PareditDelete', 'slimv.vim', 'paredit')
call TPluginFunction('PareditChange', 'slimv.vim', 'paredit')
call TPluginFunction('PareditDeleteLines', 'slimv.vim', 'paredit')
call TPluginFunction('PareditChangeLines', 'slimv.vim', 'paredit')
call TPluginFunction('PareditChangeSpec', 'slimv.vim', 'paredit')
call TPluginFunction('PareditPut', 'slimv.vim', 'paredit')
call TPluginFunction('PareditToggle', 'slimv.vim', 'paredit')
call TPluginFunction('PareditFindOpening', 'slimv.vim', 'paredit')
call TPluginFunction('PareditFindClosing', 'slimv.vim', 'paredit')
call TPluginFunction('PareditSmartJumpOpening', 'slimv.vim', 'paredit')
call TPluginFunction('PareditSmartJumpClosing', 'slimv.vim', 'paredit')
call TPluginFunction('PareditFindDefunBck', 'slimv.vim', 'paredit')
call TPluginFunction('PareditFindDefunFwd', 'slimv.vim', 'paredit')
call TPluginFunction('PareditInsertOpening', 'slimv.vim', 'paredit')
call TPluginFunction('PareditInsertClosing', 'slimv.vim', 'paredit')
call TPluginFunction('PareditInsertQuotes', 'slimv.vim', 'paredit')
call TPluginFunction('PareditEnter', 'slimv.vim', 'paredit')
call TPluginFunction('PareditBackspace', 'slimv.vim', 'paredit')
call TPluginFunction('PareditDel', 'slimv.vim', 'paredit')
call TPluginFunction('PareditEraseFwd', 'slimv.vim', 'paredit')
call TPluginFunction('PareditEraseBck', 'slimv.vim', 'paredit')
call TPluginFunction('PareditMoveLeft', 'slimv.vim', 'paredit')
call TPluginFunction('PareditMoveRight', 'slimv.vim', 'paredit')
call TPluginFunction('PareditSplit', 'slimv.vim', 'paredit')
call TPluginFunction('PareditJoin', 'slimv.vim', 'paredit')
call TPluginFunction('PareditWrapSelection', 'slimv.vim', 'paredit')
call TPluginFunction('PareditWrap', 'slimv.vim', 'paredit')
call TPluginFunction('PareditSplice', 'slimv.vim', 'paredit')
call TPluginFunction('PareditRaise', 'slimv.vim', 'paredit')
call TPluginRegisterRepo('SQLComplete.vim')
call TPluginRegisterPlugin('SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#Complete', 'SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#PreCacheSyntax', 'SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#ResetCacheSyntax', 'SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#Map', 'SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#DrillIntoTable', 'SQLComplete.vim', 'sqlcomplete')
call TPluginFunction('sqlcomplete#DrillOutOfColumns', 'SQLComplete.vim', 'sqlcomplete')
call TPluginRegisterRepo('SQLUtilities')
call TPluginRegisterPlugin('SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -range=% -nargs=* SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -range -nargs=* SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUCreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUGetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUGetColumnDataType', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUCreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUToggleValue', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('vmap <unique> <script> <Plug>SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('vmap <unique> <script> <Plug>SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUCreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUGetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUGetColumnDataType', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUCreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_Menu', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_CreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_GetColumnDatatype', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_GetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_CreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_RemoveMatchingColumns', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_ToggleValue', 'SQLUtilities', 'SQLUtilities')
call TPluginRegisterRepo('srcctl')
call TPluginRegisterPlugin('srcctl', 'srcctl')
call TPluginFunction('SSDlet', 'srcctl', 'srcctl')
call TPluginFunction('SourceControl_CreateInfoLine', 'srcctl', 'srcctl')
call TPluginFunction('SCGetLockStatus', 'srcctl', 'srcctl')
call TPluginFunction('SCLockStat', 'srcctl', 'srcctl')
call TPluginFunction('SrcCtl_addMenuSep', 'srcctl', 'srcctl')
call TPluginFunction('SrcCtl_addMenuMapping', 'srcctl', 'srcctl')
call TPluginCommand('command! -complete=file -bang -nargs=+ -count=0 SS', 'srcctl', 'srcctl')
call TPluginCommand('command! -complete=dir -bang -nargs=* -count=0 SDeploy', 'srcctl', 'srcctl')
call TPluginCommand('command! -complete=dir -bang -nargs=* -count=0 SPLocked', 'srcctl', 'srcctl')
call TPluginCommand('command! -complete=file -bang -nargs=1 -count=0 VDiff', 'srcctl', 'srcctl')
call TPluginFunction('SrcCtl_RegisterModule', 'srcctl', 'srcctl')
call TPluginRegisterRepo('stakeholders_vim')
call TPluginRegisterPlugin('stakeholders_vim', 'stakeholders')
call TPluginCommand('command! -bang StakeholdersEnable', 'stakeholders_vim', 'stakeholders')
call TPluginCommand('command! -bang StakeholdersDisable', 'stakeholders_vim', 'stakeholders')
call TPluginRegisterRepo('StripWhiteSpaces')
call TPluginRegisterPlugin('StripWhiteSpaces', 'StripWhiteSpaces')
call TPluginCommand('command! -range=% StripWhiteSpaces', 'StripWhiteSpaces', 'StripWhiteSpaces')
call TPluginRegisterRepo('supertab')
call TPluginRegisterPlugin('supertab', 'supertab')
call TPluginFunction('SuperTabSetDefaultCompletionType', 'supertab', 'supertab')
call TPluginFunction('SuperTabSetCompletionType', 'supertab', 'supertab')
call TPluginFunction('SuperTabAlternateCompletion', 'supertab', 'supertab')
call TPluginFunction('SuperTabLongestHighlight', 'supertab', 'supertab')
call TPluginFunction('SuperTab', 'supertab', 'supertab')
call TPluginFunction('SuperTabChain', 'supertab', 'supertab')
call TPluginFunction('SuperTabCodeComplete', 'supertab', 'supertab')
call TPluginMap('imap <script> <Plug>SuperTabForward', 'supertab', 'supertab')
call TPluginMap('imap <script> <Plug>SuperTabBackward', 'supertab', 'supertab')
call TPluginCommand('command SuperTabHelp', 'supertab', 'supertab')
call TPluginFunction('TestSuperTabCodeComplete', 'supertab', 'supertab')
call TPluginMap('imap <tab>', 'supertab', 'supertab')
call TPluginRegisterRepo('syntastic')
call TPluginRegisterPlugin('syntastic', 'syntastic')
call TPluginCommand('command! SyntasticToggleMode', 'syntastic', 'syntastic')
call TPluginCommand('command! -nargs=? -complete=custom,s:CompleteCheckerName SyntasticCheck', 'syntastic', 'syntastic')
call TPluginCommand('command! Errors', 'syntastic', 'syntastic')
call TPluginCommand('command! SyntasticInfo', 'syntastic', 'syntastic')
call TPluginCommand('command! SyntasticReset', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticStatuslineFlag', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticMake', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticAddToErrors', 'syntastic', 'syntastic')
call TPluginRegisterRepo('taboo.vim')
call TPluginRegisterPlugin('taboo.vim', 'taboo')
call TPluginFunction('TabooTabline', 'taboo.vim', 'taboo')
call TPluginFunction('TabooGuiLabel', 'taboo.vim', 'taboo')
call TPluginCommand('command! -nargs=1 TabooRename', 'taboo.vim', 'taboo')
call TPluginCommand('command! -nargs=1 TabooOpen', 'taboo.vim', 'taboo')
call TPluginCommand('command! -nargs=0 TabooReset', 'taboo.vim', 'taboo')
TPluginAfter \V\\taboo.vim\\plugin\\ call TPluginVimEnter("taboo")
call TPluginRegisterRepo('tabular')
call TPluginRegisterPlugin('tabular', 'Tabular')
call TPluginCommand('com! -nargs=+ -bang AddTabularPattern', 'tabular', 'Tabular')
call TPluginFunction('AddTabularPattern', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=+ -bang AddTabularPipeline', 'tabular', 'Tabular')
call TPluginFunction('AddTabularPipeline', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=* -range -complete=customlist,<SID>CompleteTabularizeCommand Tabularize', 'tabular', 'Tabular')
call TPluginFunction('Tabularize', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=* -range=% -complete=customlist,<SID>CompleteTabularizeCommand GTabularize', 'tabular', 'Tabular')
call TPluginRegisterPlugin('tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 Tagbar', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarToggle', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarOpen', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarOpenAutoClose', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarClose', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=1 -bang TagbarSetFoldlevel', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarShowTag', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarCurrentTag', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=1 TagbarGetTypeConfig', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarDebug', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarDebugEnd', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarTogglePause', 'tagbar', 'tagbar')
call TPluginRegisterRepo('templator_vim')
call TPluginRegisterPlugin('templator_vim', 'templator')
call TPluginCommand('command! -complete=customlist,templator#Complete -nargs=+ Templator', 'templator_vim', 'templator')
call TPluginRegisterRepo('Thesaurus')
call TPluginRegisterPlugin('Thesaurus', 'thesaurus')
call TPluginCommand('command! Thesaurus', 'Thesaurus', 'thesaurus')
call TPluginRegisterRepo('tlib_vim')
call TPluginRegisterPlugin('tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TRequire', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TLet', 'tlib_vim', '02tlib')
call TPluginCommand('command! -bar -nargs=* -bang TScratch', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TVarArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TKeyArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TBrowseOutput', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=0 -complete=command TBrowseScriptnames', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TTimeCommand', 'tlib_vim', '02tlib')
call TPluginRegisterPlugin('tskeleton_vim', 'tskeleton')
call TPluginFunction('TSkeletonMapGoToNextTag', 'tskeleton_vim', 'tskeleton')
call TPluginFunction('TSkeletonMapHyperComplete', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonSetup', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=custom,tskeleton#SelectTemplate TSkeletonEdit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=customlist,tskeleton#EditBitCompletion TSkeletonEditBit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonNewFile', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -bar -nargs=? TSkeletonBitReset', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=custom,tskeleton#SelectBit TSkeletonBit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! TSkeletonCleanUpBibEntry', 'tskeleton_vim', 'tskeleton')
call TPluginRegisterPlugin('ultisnips', 'snipMate_compatibility')
call TPluginFunction('Filename', 'ultisnips', 'snipMate_compatibility')
call TPluginRegisterPlugin('ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_FileTypeChanged', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnipsEdit', 'ultisnips', 'UltiSnips')
call TPluginCommand('command! -nargs=? -complete=customlist,UltiSnipsFiletypeComplete UltiSnipsEdit', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnipsAddFiletypes', 'ultisnips', 'UltiSnips')
call TPluginCommand('command! -nargs=1 UltiSnipsAddFiletypes', 'ultisnips', 'UltiSnips')
call TPluginFunction('CompensateForPUM', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ExpandSnippet', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ExpandSnippetOrJump', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ListSnippets', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_SnippetsInCurrentScope', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_SaveLastVisualSelection', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_JumpBackwards', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_JumpForwards', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_AddSnippet', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_Anon', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_MapKeys', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_CursorMoved', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_EnteredInsertMode', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnips_LeavingBuffer', 'ultisnips', 'UltiSnips')
call TPluginFunction('UltiSnipsFiletypeComplete', 'ultisnips', 'UltiSnips')
call TPluginRegisterPlugin('vcscommand.vim', 'vcsbzr')
call TPluginRegisterPlugin('vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <buffer> <Plug>VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetVCSType', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandChdir', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandChangeToCurrentFileDir', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetOriginalBuffer', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandRegisterModule', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandDoCommand', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetOption', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandDisableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandEnableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetStatusLine', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandSetVCSType', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSAdd', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* -bang VCSAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* -bang VCSBlame', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=? -bang VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSDelete', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSDiff', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 -bang VCSGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSInfo', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSLock', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSLog', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSRemove', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 VCSRevert', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=? VCSReview', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSStatus', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSUnlock', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 VCSUpdate', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSVimDiff', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSCommandDisableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSCommandEnableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSReload', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSAdd', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSDelete', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSDiff', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSClearAndGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSInfo', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSLock', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSLog', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSRevert', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSReview', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSSplitAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSStatus', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSUnlock', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSUpdate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSVimDiff', 'vcscommand.vim', 'vcscommand')
call TPluginRegisterPlugin('vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSEdit', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSEditors', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSUnedit', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! -nargs=1 CVSWatch', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchAdd', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchOn', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchOff', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchRemove', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchers', 'vcscommand.vim', 'vcscvs')
call TPluginRegisterPlugin('vcscommand.vim', 'vcsgit')
call TPluginRegisterPlugin('vcscommand.vim', 'vcshg')
call TPluginRegisterPlugin('vcscommand.vim', 'vcssvk')
call TPluginRegisterPlugin('vcscommand.vim', 'vcssvn')
call TPluginRegisterRepo('vim-abolish')
call TPluginRegisterPlugin('vim-abolish', 'abolish')
call TPluginFunction('Abolished', 'vim-abolish', 'abolish')
call TPluginMap('nnoremap <silent> <Plug>Coerce', 'vim-abolish', 'abolish')
call TPluginCommand('command! -nargs=+ -bang -bar -range=0 -complete=custom,s:Complete Abolish', 'vim-abolish', 'abolish')
call TPluginCommand('command! -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete Subvert', 'vim-abolish', 'abolish')
call TPluginCommand('command -nargs=1 -bang -bar -range=0 -complete=custom,s:SubComplete S', 'vim-abolish', 'abolish')
call TPluginRegisterRepo('vim-airline')
call TPluginRegisterPlugin('vim-airline', 'airline')
call TPluginFunction('airline#cmdwinenter', 'vim-airline', 'airline')
TPluginAfter \V\\vim-airline\\plugin\\ call TPluginVimEnter("airline")
call TPluginCommand('command! -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme', 'vim-airline', 'airline')
call TPluginCommand('command! AirlineToggleWhitespace', 'vim-airline', 'airline')
call TPluginCommand('command! AirlineToggle', 'vim-airline', 'airline')
call TPluginCommand('command! AirlineRefresh', 'vim-airline', 'airline')
call TPluginRegisterRepo('vim-aspnet')
call TPluginRegisterPlugin('vim-aspnet', 'aspnet')
call TPluginRegisterRepo('vim-autoformat')
call TPluginRegisterPlugin('vim-autoformat', 'autoformat')
call TPluginCommand('command! Autoformat', 'vim-autoformat', 'autoformat')
call TPluginRegisterPlugin('vim-autoformat', 'defaults')
call TPluginRegisterRepo('vim-backbone')
call TPluginRegisterPlugin('vim-backbone', 'backbone')
call TPluginFunction('backbone#compl', 'vim-backbone', 'backbone')
call TPluginFunction('backbone#triggerCompl', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BGenerate', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BCollection', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BRouter', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BModel', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BView', 'vim-backbone', 'backbone')
call TPluginRegisterRepo('vim-characterize')
call TPluginRegisterPlugin('vim-characterize', 'characterize')
call TPluginRegisterRepo('vim-classpath')
call TPluginRegisterPlugin('vim-classpath', 'classpath')
call TPluginRegisterPlugin('vim-csharp', 'cs')
call TPluginFunction('MsProjFile', 'vim-csharp', 'cs')
call TPluginFunction('MsVersion', 'vim-csharp', 'cs')
call TPluginFunction('IISExpress', 'vim-csharp', 'cs')
call TPluginCommand('com! -complete=file -nargs=1 MsProjFile', 'vim-csharp', 'cs')
call TPluginCommand('com! -nargs=1 MsVersion', 'vim-csharp', 'cs')
call TPluginCommand('com! IISExpress', 'vim-csharp', 'cs')
call TPluginRegisterRepo('vim-cucumber-align-pipes')
call TPluginRegisterPlugin('vim-cucumber-align-pipes', 'cucumber-align-pipes')
call TPluginRegisterRepo('vim-dispatch')
call TPluginRegisterPlugin('vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete Dispatch', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete FocusDispatch', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=file Make', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete Start', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang Copen', 'vim-dispatch', 'dispatch')
call TPluginFunction('DispatchComplete', 'vim-dispatch', 'dispatch')
call TPluginRegisterRepo('vim-easy-align')
call TPluginRegisterPlugin('vim-easy-align', 'easy_align')
call TPluginCommand('command! -nargs=* -range -bang EasyAlign', 'vim-easy-align', 'easy_align')
call TPluginCommand('command! -nargs=* -range -bang LiveEasyAlign', 'vim-easy-align', 'easy_align')
call TPluginRegisterRepo('vim-endwise')
call TPluginRegisterPlugin('vim-endwise', 'endwise')
call TPluginMap('imap <script> <Plug>DiscretionaryEnd', 'vim-endwise', 'endwise')
call TPluginMap('imap <script> <Plug>AlwaysEnd', 'vim-endwise', 'endwise')
call TPluginRegisterRepo('vim-fireplace')
call TPluginRegisterPlugin('vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#jar_contents', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#eval_complete', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#ns_complete', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#omnicomplete', 'vim-fireplace', 'fireplace')
call TPluginCommand('command! -bar -complete=customlist,s:connect_complete -nargs=+ FireplaceConnect', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#input_host_port', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#client', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#local_client', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#findresource', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#quickfix_for', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#session_eval', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#eval', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#echo_session_eval', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#evalprint', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#macroexpand', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#evalparse', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplacePrintLast', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplacePrint', 'vim-fireplace', 'fireplace')
call TPluginMap('xnoremap <silent> <Plug>FireplacePrint', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceFilter', 'vim-fireplace', 'fireplace')
call TPluginMap('xnoremap <silent> <Plug>FireplaceFilter', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceMacroExpand', 'vim-fireplace', 'fireplace')
call TPluginMap('xnoremap <silent> <Plug>FireplaceMacroExpand', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceMacroExpand1', 'vim-fireplace', 'fireplace')
call TPluginMap('xnoremap <silent> <Plug>FireplaceMacroExpand1', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceEdit', 'vim-fireplace', 'fireplace')
call TPluginMap('xnoremap <silent> <Plug>FireplaceEdit', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <Plug>FireplacePrompt', 'vim-fireplace', 'fireplace')
call TPluginCommand('command! -buffer -bang -range=0 -nargs=? -complete=customlist,fireplace#eval_complete Eval', 'vim-fireplace', 'fireplace')
call TPluginCommand('command! -buffer -bang -bar -count=1 Last', 'vim-fireplace', 'fireplace')
call TPluginCommand('command! -buffer -bar -bang -complete=customlist,fireplace#ns_complete -nargs=? Require', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#source', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceDjump', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceDsplit', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <silent> <Plug>FireplaceDtabjump', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#findfile', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#ns', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <Plug>FireplaceK', 'vim-fireplace', 'fireplace')
call TPluginMap('nnoremap <Plug>FireplaceSource', 'vim-fireplace', 'fireplace')
call TPluginFunction('fireplace#alternates', 'vim-fireplace', 'fireplace')
call TPluginRegisterRepo('vim-fugitive')
call TPluginRegisterPlugin('vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#is_git_dir', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#extract_git_dir', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#detect', 'vim-fugitive', 'fugitive')
TPluginAfter \V\\vim-fugitive\\plugin\\ call TPluginVimEnter("fugitive")
call TPluginFunction('fugitive#repo', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#buffer', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#reload_status', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#statusline', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#head', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#foldtext', 'vim-fugitive', 'fugitive')
call TPluginRegisterRepo('vim-html5validator')
call TPluginRegisterPlugin('vim-html5validator', 'html5validator')
call TPluginCommand('command! -complete=file -nargs=0 HTML5Validate', 'vim-html5validator', 'html5validator')
call TPluginRegisterRepo('vim-indent-guides')
call TPluginRegisterPlugin('vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesToggle', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesEnable', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesDisable', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesToggle', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesEnable', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesDisable', 'vim-indent-guides', 'indent_guides')
TPluginAfter \V\\vim-indent-guides\\plugin\\ call TPluginVimEnter("indent_guides")
call TPluginRegisterRepo('vim-indexer')
call TPluginRegisterPlugin('vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerInfo', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerFiles', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerRebuild', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerFilesAvail', 'vim-indexer', 'indexer')
call TPluginRegisterRepo('vim-jsbeautify')
call TPluginRegisterPlugin('vim-jsbeautify', 'beautifier')
call TPluginFunction('WarningMsg', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('ErrorMsg', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('BeautifierApplyConfig', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('Beautifier', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('BeautifierEditorconfigHook', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('JsBeautify', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('HtmlBeautify', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('CSSBeautify', 'vim-jsbeautify', 'beautifier')
call TPluginFunction('LegacyMsg', 'vim-jsbeautify', 'beautifier')
call TPluginRegisterRepo('vim-matchit')
call TPluginRegisterPlugin('vim-matchit', 'matchit')
call TPluginRegisterRepo('vim-multiple-cursors')
call TPluginRegisterPlugin('vim-multiple-cursors', 'multiple_cursors')
call TPluginCommand('command! -nargs=1 -range=% MultipleCursorsFind', 'vim-multiple-cursors', 'multiple_cursors')
call TPluginRegisterRepo('vim-preview')
call TPluginRegisterPlugin('vim-preview', 'preview')
call TPluginCommand('command! Preview', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewMarkdown', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewTextile', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewRdoc', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewHtml', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewRonn', 'vim-preview', 'preview')
call TPluginCommand('command! PreviewRst', 'vim-preview', 'preview')
call TPluginRegisterRepo('vim-project')
call TPluginRegisterPlugin('vim-project', 'project')
call TPluginFunction('ProjFoldText', 'vim-project', 'project')
call TPluginFunction('Project_GetAllFnames', 'vim-project', 'project')
call TPluginFunction('Project_GetFname', 'vim-project', 'project')
call TPluginFunction('Project_ForEach', 'vim-project', 'project')
call TPluginMap('nnoremap <script> <Plug>ProjectOnly', 'vim-project', 'project')
call TPluginCommand('command -nargs=? -complete=file Project', 'vim-project', 'project')
call TPluginMap('nnoremap <script> <Plug>ToggleProject', 'vim-project', 'project')
call TPluginRegisterRepo('vim-ragtag')
call TPluginRegisterPlugin('vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagHtmlComplete', 'vim-ragtag', 'ragtag')
call TPluginFunction('RagtagInit', 'vim-ragtag', 'ragtag')
call TPluginFunction('AllmlInit', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagBSUrl', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagBSXml', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagUrlEncode', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagXmlEncode', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagUrlV', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagXmlV', 'vim-ragtag', 'ragtag')
call TPluginRegisterRepo('vim-session')
call TPluginRegisterPlugin('vim-session', 'session')
TPluginAfter \V\\vim-session\\plugin\\ call TPluginVimEnter("PluginSession")
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names OpenSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -nargs=? -complete=customlist,xolox#session#complete_names ViewSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SaveSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names DeleteSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang CloseSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names OpenTabSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SaveTabSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -count=94919 -nargs=? -complete=customlist,xolox#session#complete_names AppendTabSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang CloseTabSession', 'vim-session', 'session')
call TPluginCommand('command! -bang -nargs=* -complete=command RestartVim', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionOpen', 'vim-session', 'session')
call TPluginCommand('command! -bar -nargs=? -complete=customlist,xolox#session#complete_names SessionView', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionSave', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionDelete', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang SessionClose', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionTabOpen', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionTabSave', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -count=94919 -nargs=? -complete=customlist,xolox#session#complete_names SessionTabAppend', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang SessionTabClose', 'vim-session', 'session')
call TPluginRegisterRepo('vim-shell')
call TPluginRegisterPlugin('vim-shell', 'shell')
call TPluginCommand('command! -bar -bang -nargs=? MakeWithShell', 'vim-shell', 'shell')
call TPluginCommand('command! -bar -bang -nargs=? LMakeWithShell', 'vim-shell', 'shell')
call TPluginRegisterPlugin('vim-snipmate', 'snipMate')
call TPluginMap('inoremap <silent> <Plug>snipMateNextOrTrigger', 'vim-snipmate', 'snipMate')
call TPluginMap('snoremap <silent> <Plug>snipMateNextOrTrigger', 'vim-snipmate', 'snipMate')
call TPluginMap('inoremap <silent> <Plug>snipMateBack', 'vim-snipmate', 'snipMate')
call TPluginMap('snoremap <silent> <Plug>snipMateBack', 'vim-snipmate', 'snipMate')
call TPluginMap('inoremap <silent> <Plug>snipMateShow', 'vim-snipmate', 'snipMate')
call TPluginMap('xnoremap <silent> <Plug>snipMateVisual', 'vim-snipmate', 'snipMate')
call TPluginFunction('TriggerSnippet', 'vim-snipmate', 'snipMate')
call TPluginFunction('BackwardSnippet', 'vim-snipmate', 'snipMate')
call TPluginRegisterPlugin('vim-snipmate', 'snipMateInterface')
call TPluginCommand('command! SnipMateOpenSnippetFiles', 'vim-snipmate', 'snipMateInterface')
call TPluginRegisterRepo('vim-surround')
call TPluginRegisterPlugin('vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>SurroundRepeat', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Dsurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Csurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Yssurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSsurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Ysurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSurround', 'vim-surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VSurround', 'vim-surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VgSurround', 'vim-surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>Isurround', 'vim-surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>ISurround', 'vim-surround', 'surround')
call TPluginRegisterRepo('vim-template')
call TPluginRegisterPlugin('vim-template', 'templates')
call TPluginCommand('command -nargs=1 -complete=file Template', 'vim-template', 'templates')
call TPluginRegisterRepo('vim-visual-star-search')
call TPluginRegisterPlugin('vim-visual-star-search', 'visual-star-search')
call TPluginRegisterPlugin('vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShell', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellCreate', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellPop', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellTab', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellCurrentDir', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellBufferDir', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=+ -complete=customlist,vimshell#vimshell_execute_complete VimShellExecute', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=* -complete=customlist,vimshell#vimshell_execute_complete VimShellInteractive', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=+ -complete=customlist,vimshell#vimshell_execute_complete VimShellTerminal', 'vimshell', 'vimshell')
call TPluginCommand('command! -range -nargs=? VimShellSendString', 'vimshell', 'vimshell')
call TPluginCommand('command! -complete=buffer -nargs=1 VimShellSendBuffer', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_split_switch)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_split_create)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_switch)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_create)', 'vimshell', 'vimshell')
call TPluginRegisterRepo('visual_studio.vim')
call TPluginRegisterPlugin('visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEReload', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEGetFile', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEPutFile', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTETaskList', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEOutput', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEFindResults', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTECompileFile', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEBuildSolution', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEBuildStartupProject', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEGetSolutions', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEGetProjects', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEOnline', 'visual_studio.vim', 'visual_studio')
call TPluginFunction('DTEAbout', 'visual_studio.vim', 'visual_studio')
call TPluginRegisterPlugin('vundle', 'AlignMapsPlugin')
call TPluginCommand('com! AlignMapsClean', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AlignMapsWrapperStart', 'vundle', 'AlignMapsPlugin')
call TPluginMap('vnoremap <silent> <script> <Plug>AlignMapsWrapperStart', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AlignMapsWrapperEnd', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_a?', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_a,', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_a', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_a(', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_a=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_abox', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_acom', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_adcom', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_aocom', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ascom', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_adec', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_adef', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_afnc', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_aunum', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_aenum', 'vundle', 'AlignMapsPlugin')
call TPluginMap('map <silent> <script> <Plug>AM_Htd', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T|', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T#', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T,', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_Ts,', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T:', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T;', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T?', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T@', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_TW@', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_Tab', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_Tsp', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_T~', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t|', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t#', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t,', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t:', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t;', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ts,', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ts:', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ts;', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ts', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_ts=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_w=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t?', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t~', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_t@', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tW@', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_m=', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tab', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tml', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tsp', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tsq', 'vundle', 'AlignMapsPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>AM_tt', 'vundle', 'AlignMapsPlugin')
call TPluginRegisterPlugin('vundle', 'AlignPlugin')
call TPluginCommand('com! -bang -range -nargs=* Align', 'vundle', 'AlignPlugin')
call TPluginCommand('com! -range -nargs=0 AlignReplaceQuotedSpaces', 'vundle', 'AlignPlugin')
call TPluginCommand('com! -nargs=* AlignCtrl', 'vundle', 'AlignPlugin')
call TPluginCommand('com! -nargs=0 AlignPush', 'vundle', 'AlignPlugin')
call TPluginCommand('com! -nargs=0 AlignPop', 'vundle', 'AlignPlugin')
call TPluginRegisterPlugin('vundle', 'AutoAlign')
call TPluginRegisterPlugin('vundle', 'cecutil')
call TPluginRegisterPlugin('vundle', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTerm', 'vundle', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermSplit', 'vundle', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermVSplit', 'vundle', 'conque_term')
call TPluginCommand('command! -nargs=+ -complete=shellcmd ConqueTermTab', 'vundle', 'conque_term')
call TPluginRegisterPlugin('vundle', 'Decho')
call TPluginRegisterRepo('Word-Fuzzy-Completion')
call TPluginRegisterPlugin('Word-Fuzzy-Completion', 'wordfuzzycompletion')
call TPluginFunction('PythonWordFuzzyCompletion', 'Word-Fuzzy-Completion', 'wordfuzzycompletion')
call TPluginFunction('FuzzyWordCompletion', 'Word-Fuzzy-Completion', 'wordfuzzycompletion')
call TPluginRegisterPlugin('xpt', 'debug')
call TPluginCommand('com! DebugGetSID', 'xpt', 'debug')
call TPluginFunction('CreateLogger', 'xpt', 'debug')
call TPluginFunction('Assert', 'xpt', 'debug')
call TPluginCommand('com! -nargs=+ Assert', 'xpt', 'debug')
call TPluginFunction('Log_core', 'xpt', 'debug')
call TPluginRegisterPlugin('xpt', 'FiletypeScope.class')
call TPluginRegisterPlugin('xpt', 'FilterValue.class')
call TPluginRegisterPlugin('xpt', 'MapSaver.class')
call TPluginRegisterPlugin('xpt', 'mapstack')
call TPluginRegisterPlugin('xpt', 'SettingSwitch.class')
call TPluginRegisterPlugin('xpt', 'SnippetScope.class')
call TPluginRegisterPlugin('xpt', 'xpclass')
call TPluginRegisterPlugin('xpt', 'xpmark')
call TPluginCommand('com! XPMgetSID', 'xpt', 'xpmark')
call TPluginFunction('XPMcheckStatusline', 'xpt', 'xpmark')
call TPluginFunction('XPMadd', 'xpt', 'xpmark')
call TPluginFunction('XPMhere', 'xpt', 'xpmark')
call TPluginFunction('XPMremove', 'xpt', 'xpmark')
call TPluginFunction('XPMremoveStartEnd', 'xpt', 'xpmark')
call TPluginFunction('XPMremoveMarkStartWith', 'xpt', 'xpmark')
call TPluginFunction('XPMflush', 'xpt', 'xpmark')
call TPluginFunction('XPMflushWithHistory', 'xpt', 'xpmark')
call TPluginFunction('XPMgoto', 'xpt', 'xpmark')
call TPluginFunction('XPMpos', 'xpt', 'xpmark')
call TPluginFunction('XPMhas', 'xpt', 'xpmark')
call TPluginFunction('XPMposStartEnd', 'xpt', 'xpmark')
call TPluginFunction('XPMposList', 'xpt', 'xpmark')
call TPluginFunction('XPMmarkAfter', 'xpt', 'xpmark')
call TPluginFunction('XPMsetLikelyBetween', 'xpt', 'xpmark')
call TPluginFunction('XPMsetUpdateStrategy', 'xpt', 'xpmark')
call TPluginFunction('XPMupdateSpecificChangedRange', 'xpt', 'xpmark')
call TPluginFunction('XPMautoUpdate', 'xpt', 'xpmark')
call TPluginFunction('XPMupdate', 'xpt', 'xpmark')
call TPluginFunction('XPMupdateStat', 'xpt', 'xpmark')
call TPluginFunction('XPMupdateCursorStat', 'xpt', 'xpmark')
call TPluginFunction('XPMsetBufSortFunction', 'xpt', 'xpmark')
call TPluginFunction('XPMallMark', 'xpt', 'xpmark')
call TPluginFunction('XPMupdateWithMarkRangeChanging', 'xpt', 'xpmark')
call TPluginFunction('PrintDebug', 'xpt', 'xpmark')
call TPluginRegisterPlugin('xpt', 'xpop.test')
call TPluginRegisterPlugin('xpt', 'xpopup')
call TPluginFunction('XPPopupNew', 'xpt', 'xpopup')
call TPluginFunction('PUMclear', 'xpt', 'xpopup')
call TPluginFunction('XPPprocess', 'xpt', 'xpopup')
call TPluginFunction('XPPcomplete', 'xpt', 'xpopup')
call TPluginFunction('XPPcr', 'xpt', 'xpopup')
call TPluginFunction('XPPup', 'xpt', 'xpopup')
call TPluginFunction('XPPdown', 'xpt', 'xpopup')
call TPluginFunction('XPPcallback', 'xpt', 'xpopup')
call TPluginFunction('XPPshorten', 'xpt', 'xpopup')
call TPluginFunction('XPPenlarge', 'xpt', 'xpopup')
call TPluginFunction('XPPcancel', 'xpt', 'xpopup')
call TPluginFunction('XPPaccept', 'xpt', 'xpopup')
call TPluginFunction('XPPrepopup', 'xpt', 'xpopup')
call TPluginFunction('XPPcorrectPos', 'xpt', 'xpopup')
call TPluginFunction('XPPhasSession', 'xpt', 'xpopup')
call TPluginFunction('XPPend', 'xpt', 'xpopup')
call TPluginRegisterPlugin('xpt', 'xpreplace')
call TPluginFunction('XPRstartSession', 'xpt', 'xpreplace')
call TPluginFunction('XPRendSession', 'xpt', 'xpreplace')
call TPluginFunction('XPreplaceByMarkInternal', 'xpt', 'xpreplace')
call TPluginFunction('XPreplaceInternal', 'xpt', 'xpreplace')
call TPluginFunction('XPreplace', 'xpt', 'xpreplace')
call TPluginFunction('XPRaddPreJob', 'xpt', 'xpreplace')
call TPluginFunction('XPRaddPostJob', 'xpt', 'xpreplace')
call TPluginFunction('XPRremovePreJob', 'xpt', 'xpreplace')
call TPluginFunction('XPRremovePostJob', 'xpt', 'xpreplace')
call TPluginRegisterPlugin('xpt', 'xpt.plugin.highlight')
call TPluginFunction('XPTgetStaticRange', 'xpt', 'xpt.plugin.highlight')
call TPluginRegisterPlugin('xpt', 'xptemplate.conf')
call TPluginFunction('g:XPTaddBundle', 'xpt', 'xptemplate.conf')
call TPluginFunction('g:XPTloadBundle', 'xpt', 'xptemplate.conf')
call TPluginFunction('XPTfiletypeInit', 'xpt', 'xptemplate.conf')
call TPluginFunction('XPTinfo', 'xpt', 'xptemplate.conf')
call TPluginFunction('XPTinfoStr', 'xpt', 'xptemplate.conf')
call TPluginRegisterPlugin('xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=* XPTemplate', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=* XPTemplateDef', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=* XPT', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=* XPTvar', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=* XPTsnipSet', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=+ XPTinclude', 'xpt', 'xptemplate.parser')
call TPluginCommand('com! -nargs=+ XPTembed', 'xpt', 'xptemplate.parser')
call TPluginFunction('XPTsnippetFileInit', 'xpt', 'xptemplate.parser')
call TPluginFunction('XPTsnipSet', 'xpt', 'xptemplate.parser')
call TPluginFunction('XPTsetVar', 'xpt', 'xptemplate.parser')
call TPluginFunction('XPTinclude', 'xpt', 'xptemplate.parser')
call TPluginFunction('XPTembed', 'xpt', 'xptemplate.parser')
call TPluginFunction('DoParseSnippet', 'xpt', 'xptemplate.parser')
call TPluginRegisterPlugin('xpt', 'xptemplate.util')
call TPluginFunction('g:XPclassPrototype', 'xpt', 'xptemplate.util')
call TPluginRegisterPlugin('xpt', 'xptemplate')
call TPluginFunction('XPTmarkCompare', 'xpt', 'xptemplate')
call TPluginFunction('g:XPTapplyTemplateSettingDefaultValue', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateKeyword', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplatePriority', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateMark', 'xpt', 'xptemplate')
call TPluginFunction('XPTmark', 'xpt', 'xptemplate')
call TPluginFunction('g:XPTfuncs', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateAlias', 'xpt', 'xptemplate')
call TPluginFunction('g:GetSnipFileFT', 'xpt', 'xptemplate')
call TPluginFunction('g:GetSnipFileFtScope', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplate', 'xpt', 'xptemplate')
call TPluginFunction('XPTdefineSnippet', 'xpt', 'xptemplate')
call TPluginFunction('XPTreload', 'xpt', 'xptemplate')
call TPluginFunction('XPTgetAllTemplates', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplatePreWrap', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateDoWrap', 'xpt', 'xptemplate')
call TPluginFunction('XPTabbr', 'xpt', 'xptemplate')
call TPluginFunction('XPTtgr', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateTrigger', 'xpt', 'xptemplate')
call TPluginFunction('XPTparseSnippets', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateStart', 'xpt', 'xptemplate')
call TPluginFunction('XPTforceForward', 'xpt', 'xptemplate')
call TPluginFunction('XPTmappingEval', 'xpt', 'xptemplate')
call TPluginFunction('XPTmapKey', 'xpt', 'xptemplate')
call TPluginFunction('XPTbufData', 'xpt', 'xptemplate')
call TPluginFunction('XPTnewSnipScope', 'xpt', 'xptemplate')
call TPluginFunction('XPTsnipScope', 'xpt', 'xptemplate')
call TPluginFunction('XPTsnipScopePush', 'xpt', 'xptemplate')
call TPluginFunction('XPTsnipScopePop', 'xpt', 'xptemplate')
call TPluginFunction('XPTemplateInit', 'xpt', 'xptemplate')
call TPluginMap('inoremap <silent> <Plug>XPTdoBreakUndo', 'xpt', 'xptemplate')
call TPluginFunction('g:XPTaddPlugin', 'xpt', 'xptemplate')
call TPluginCommand('com! XPTreload', 'xpt', 'xptemplate')
call TPluginCommand('com! XPTcrash', 'xpt', 'xptemplate')
call TPluginRegisterRepo('xterm-color-table.vim')
call TPluginRegisterPlugin('xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! XtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! SXtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! VXtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! TXtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! EXtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')
call TPluginCommand('command! OXtermColorTable', 'xterm-color-table.vim', 'xterm-color-table')

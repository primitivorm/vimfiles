" This file was generated by TPluginScan.
if g:tplugin_autoload == 2 && g:loaded_tplugin != 100 | throw "TPluginScan:Outdated" | endif
TPluginBefore \<quickfixsigns_vim[\/]autoload[\/] TPlugin tlib_vim
TPluginBefore \<quickfixsigns_vim[\/]autoload[\/] TPlugin quickfixsigns_vim
call TPluginDependencies('tskeleton_vim', ['tlib_vim'])
call TPluginDependencies('vim-snipmate', ['vim-addon-mw-utils', 'tlib'])
augroup filetypedetect
" This has to be called before ftplugins are loaded. Therefore 
" it is here in ftdetect though it maybe shouldn't
if has("autocmd")
   autocmd FileType * call UltiSnips_FileTypeChanged()
endif

augroup END
augroup filetypedetect
" recognize .snippet files
if has("autocmd")
    autocmd BufNewFile,BufRead *.snippets setf snippets
endif
augroup END
augroup filetypedetect
au BufNewFile,BufRead *.textcodeoverview setf codeoverview
augroup END
augroup filetypedetect
" Git
autocmd BufNewFile,BufRead *.git/{,modules/**/}{COMMIT_EDIT,MERGE_}MSG set ft=gitcommit
autocmd BufNewFile,BufRead *.git/config,.gitconfig,.gitmodules set ft=gitconfig
autocmd BufNewFile,BufRead */.config/git/config                set ft=gitconfig
autocmd BufNewFile,BufRead *.git/modules/**/config             set ft=gitconfig
autocmd BufNewFile,BufRead git-rebase-todo                     set ft=gitrebase
autocmd BufNewFile,BufRead .msg.[0-9]*
      \ if getline(1) =~ '^From.*# This line is ignored.$' |
      \   set ft=gitsendemail |
      \ endif
autocmd BufNewFile,BufRead *.git/**
      \ if getline(1) =~ '^\x\{40\}\>\|^ref: ' |
      \   set ft=git |
      \ endif

" This logic really belongs in scripts.vim
autocmd BufNewFile,BufRead,StdinReadPost *
      \ if getline(1) =~ '^\(commit\|tree\|object\) \x\{40\}\>\|^tag \S\+$' |
      \   set ft=git |
      \ endif
augroup END
augroup filetypedetect
autocmd BufRead,BufNewFile jquery.*.js set ft=javascript syntax=jquery
augroup END
augroup filetypedetect
autocmd BufNewFile,BufRead *.json set filetype=json

augroup json_autocmd
  autocmd!
  autocmd FileType json set autoindent
  autocmd FileType json set formatoptions=tcq2l
  autocmd FileType json set textwidth=78 shiftwidth=2
  autocmd FileType json set softtabstop=2 tabstop=8
  autocmd FileType json set expandtab
  autocmd FileType json set foldmethod=syntax
augroup END
augroup END
augroup filetypedetect
" markdown filetype file
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}   set filetype=mkd
au BufRead,BufNewFile *.{md,mdown,mkd,mkdn,markdown,mdwn}.{des3,des,bf,bfa,aes,idea,cast,rc2,rc4,rc5,desx} set filetype=mkd
augroup END
augroup filetypedetect
" Vim ftdetect plugin file
" Language:     MSBuild
" Maintainer:   Heath Stewart <heaths@outlook.com>
" Version:      1.0
" Repository:   https://github.com/heaths/vim-msbuild
" Vimball:      http://www.vim.org/scripts/script.php?script_id=4422

" Override the default file type setting.
au BufNewFile,BufRead *.*proj,*.props,*.targets set ft=msbuild
augroup END
augroup filetypedetect
" Stylus
autocmd BufNewFile,BufReadPost *.styl set filetype=stylus
autocmd BufNewFile,BufReadPost *.stylus set filetype=stylus
augroup END
call TPluginRegisterRepo('Decho')
call TPluginRegisterRepo('Rainbow-Parenthesis')
call TPluginRegisterRepo('UltiSnips')
call TPluginRegisterRepo('bash-support.vim')
call TPluginRegisterRepo('c.vim')
call TPluginRegisterRepo('cocoa.vim')
call TPluginRegisterRepo('git-vim')
call TPluginRegisterRepo('html5.vim')
call TPluginRegisterRepo('indenthtml.vim')
call TPluginRegisterRepo('nerdtree')
call TPluginRegisterRepo('netrw.vim')
call TPluginRegisterRepo('splice.vim')
call TPluginRegisterRepo('tagbar')
call TPluginRegisterRepo('tskeleton_vim')
call TPluginRegisterRepo('vcscommand.vim')
call TPluginRegisterRepo('vim-codeoverview')
call TPluginRegisterRepo('vim-csharp')
call TPluginRegisterRepo('vim-git')
call TPluginRegisterRepo('vim-jquery')
call TPluginRegisterRepo('vim-json')
call TPluginRegisterRepo('vim-lua-ftplugin')
call TPluginRegisterRepo('vim-markdown')
call TPluginRegisterRepo('vim-msbuild')
call TPluginRegisterRepo('vim-plugin-viewdoc')
call TPluginRegisterRepo('vim-snipmate')
call TPluginRegisterRepo('vim-stylus')
call TPluginRegisterRepo('vimshell')
call TPluginRegisterRepo('vimtlib')
call TPluginFiletype('mkd', ['vim-markdown'])
call TPluginFiletype('tskeleton', ['tskeleton_vim'])
call TPluginFiletype('snippets', ['vim-snipmate', 'UltiSnips'])
call TPluginFiletype('infman_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('svkannotate', ['vcscommand.vim'])
call TPluginFiletype('cs', ['vim-csharp'])
call TPluginFiletype('gitconfig', ['vim-git'])
call TPluginFiletype('vimshell', ['vimshell'])
call TPluginFiletype('lua', ['vim-lua-ftplugin'])
call TPluginFiletype('UltiSnips', ['UltiSnips'])
call TPluginFiletype('pman_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('javascript', ['html5.vim'])
call TPluginFiletype('git', ['vim-git'])
call TPluginFiletype('gitrebase', ['vim-git'])
call TPluginFiletype('vim_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('netrw', ['netrw.vim'])
call TPluginFiletype('python_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('gitannotate', ['vcscommand.vim'])
call TPluginFiletype('git-status', ['git-vim'])
call TPluginFiletype('Decho', ['Decho'])
call TPluginFiletype('c', ['c.vim'])
call TPluginFiletype('objc_cocoa_mappings', ['cocoa.vim'])
call TPluginFiletype('nerdtree', ['nerdtree'])
call TPluginFiletype('gitcommit', ['vim-git'])
call TPluginFiletype('man_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('css_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('gitsendemail', ['vim-git'])
call TPluginFiletype('int-termtter', ['vimshell'])
call TPluginFiletype('cvsannotate', ['vcscommand.vim'])
call TPluginFiletype('vcscommit', ['vcscommand.vim'])
call TPluginFiletype('git-log', ['git-vim'])
call TPluginFiletype('msbuild', ['vim-msbuild'])
call TPluginFiletype('html', ['indenthtml.vim', 'html5.vim'])
call TPluginFiletype('splice', ['splice.vim'])
call TPluginFiletype('snippet', ['vim-snipmate'])
call TPluginFiletype('codeoverview', ['vim-codeoverview'])
call TPluginFiletype('stylus', ['vim-stylus'])
call TPluginFiletype('aspx', ['vim-csharp'])
call TPluginFiletype('html_snip_helper', ['vim-snipmate'])
call TPluginFiletype('git-diff', ['git-vim'])
call TPluginFiletype('help_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('perl_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('svnannotate', ['vcscommand.vim'])
call TPluginFiletype('make', ['c.vim'])
call TPluginFiletype('json', ['vim-json'])
call TPluginFiletype('sh', ['bash-support.vim'])
call TPluginFiletype('tagbar', ['tagbar'])
call TPluginFiletype('int-earthquake', ['vimshell'])
call TPluginFiletype('hgannotate', ['vcscommand.vim'])
call TPluginFiletype('jquery', ['vim-jquery'])
call TPluginFiletype('cshtml', ['vim-csharp'])
call TPluginFiletype('vimshrc', ['vimshell'])
call TPluginFiletype('RainbowParenthsis', ['Rainbow-Parenthesis'])
call TPluginFiletype('perldoc_viewdoc', ['vim-plugin-viewdoc'])
call TPluginFiletype('bbcode', ['vimtlib'])
call TPluginAutoload('acp', ['AutoComplPop', '.'])
call TPluginAutoload('csapprox#common', ['CSApprox', '.'])
call TPluginAutoload('csapprox#per_component', ['CSApprox', '.'])
call TPluginAutoload('csapprox', ['CSApprox', '.'])
call TPluginAutoload('dfrank#util', ['DfrankUtil', '.'])
call TPluginAutoload('DrawIt', ['DrawIt', '.'])
call TPluginAutoload('fuf#bookmarkdir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#bookmarkfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#buffer', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#buffertag', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#callbackfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#callbackitem', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#changelist', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#coveragefile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#dir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#file', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givencmd', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givendir', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#givenfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#help', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#jumplist', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#line', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#mrucmd', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#mrufile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#quickfix', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#tag', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf#taggedfile', ['FuzzyFinder', '.'])
call TPluginAutoload('fuf', ['FuzzyFinder', '.'])
call TPluginAutoload('l9#async', ['L9', '.'])
call TPluginAutoload('l9#quickfix', ['L9', '.'])
call TPluginAutoload('l9#tempbuffer', ['L9', '.'])
call TPluginAutoload('l9#tempvariables', ['L9', '.'])
call TPluginAutoload('l9', ['L9', '.'])
call TPluginAutoload('MatchTagAlways', ['MatchTagAlways', '.'])
call TPluginAutoload('nrrwrgn', ['NrrwRgn', '.'])
call TPluginAutoload('SQLUtilities', ['SQLUtilities', '.'])
call TPluginAutoload('savesigns', ['SaveSigns.vim', '.'])
call TPluginAutoload('SingleCompile#templates#ada', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#bash', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#c', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#cmake', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#cpp', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#cs', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#csh', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#d', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#dosbatch', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#erlang', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#fortran', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#go', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#haskell', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#html', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#idlang', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#java', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#javascript', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#ksh', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#lisp', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#lua', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#make', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#markdown', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#objc', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#pascal', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#perl', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#php', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#python', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#r', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#rst', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#ruby', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#scala', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#sh', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#tcl', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#tcsh', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#tex', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#vb', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#vim', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#xhtml', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile#templates#zsh', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompile', ['SingleCompile', '.'])
call TPluginAutoload('SingleCompileAsync', ['SingleCompile', '.'])
call TPluginAutoload('zencoding#lang#css', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang#haml', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang#html', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang#sass', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang#scss', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang#slim', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#lang', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding#util', ['zencoding-vim', '.'])
call TPluginAutoload('zencoding', ['zencoding-vim', '.'])
call TPluginAutoload('ZoomWin', ['ZoomWin', '.'])
call TPluginAutoload('ag', ['ag.vim', '.'])
call TPluginAutoload('objc#cocoacomplete', ['cocoa.vim', '.'])
call TPluginAutoload('objc#man', ['cocoa.vim', '.'])
call TPluginAutoload('objc#method_builder', ['cocoa.vim', '.'])
call TPluginAutoload('objc#method_list', ['cocoa.vim', '.'])
call TPluginAutoload('objc#pum_snippet', ['cocoa.vim', '.'])
call TPluginAutoload('colorv#cache', ['colorv.vim', '.'])
call TPluginAutoload('colorv#data', ['colorv.vim', '.'])
call TPluginAutoload('colorv#mark', ['colorv.vim', '.'])
call TPluginAutoload('colorv#scheme', ['colorv.vim', '.'])
call TPluginAutoload('colorv#win', ['colorv.vim', '.'])
call TPluginAutoload('colorv', ['colorv.vim', '.'])
call TPluginAutoload('ctrlp#bookmarkdir', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#buffertag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#changes', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#dir', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#line', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#mixed', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#mrufiles', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#quickfix', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#rtscript', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#tag', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#undo', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp#utils', ['ctrlp.vim', '.'])
call TPluginAutoload('ctrlp', ['ctrlp.vim', '.'])
call TPluginAutoload('dbext', ['dbext.vim', '.'])
call TPluginAutoload('dbext_dbi', ['dbext.vim', '.'])
call TPluginAutoload('delimitMate', ['delimitMate', '.'])
call TPluginAutoload('delimitMateTests', ['delimitMate', '.'])
call TPluginAutoload('genutils', ['genutils', '.'])
call TPluginAutoload('genutils', ['genutils-2.5', '.'])
call TPluginAutoload('gist', ['gist-vim', '.'])
call TPluginAutoload('gundo', ['gundo.vim', '.'])
call TPluginAutoload('htmlcomplete', ['html5.vim', '.'])
call TPluginAutoload('xml#aria', ['html5.vim', '.'])
call TPluginAutoload('xml#html5', ['html5.vim', '.'])
call TPluginAutoload('jslibsyntax', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#angularjs.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#backbone.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#jquery.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#postprocess.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#prelude.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#requirejs.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.coffee', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.javascript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.ls', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('syntax#underscore.typescript', ['javascript-libraries-syntax.vim', '.'])
call TPluginAutoload('lisper', ['lisper-vim', '.'])
call TPluginAutoload('minimap', ['minimap-vim', '.'])
call TPluginAutoload('multiselect', ['multiselect', '.'])
call TPluginAutoload('nerdtree', ['nerdtree', '.'])
call TPluginAutoload('netrw', ['netrw.vim', '.'])
call TPluginAutoload('netrwFileHandlers', ['netrw.vim', '.'])
call TPluginAutoload('netrwSettings', ['netrw.vim', '.'])
call TPluginAutoload('quickfixsigns#breakpoints', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns#marks', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns#vcsdiff', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns', ['quickfixsigns', '.'])
call TPluginAutoload('quickfixsigns#breakpoints', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns#marks', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns#vcsdiff', ['quickfixsigns_vim', '.'])
call TPluginAutoload('quickfixsigns', ['quickfixsigns_vim', '.'])
call TPluginAutoload('tinykeymap#map#quickfixsigns', ['quickfixsigns_vim', '.'])
call TPluginAutoload('xolox#misc#buffer', ['shell', '.'])
call TPluginAutoload('xolox#misc#complete', ['shell', '.'])
call TPluginAutoload('xolox#misc#escape', ['shell', '.'])
call TPluginAutoload('xolox#misc#list', ['shell', '.'])
call TPluginAutoload('xolox#misc#msg', ['shell', '.'])
call TPluginAutoload('xolox#misc#open', ['shell', '.'])
call TPluginAutoload('xolox#misc#option', ['shell', '.'])
call TPluginAutoload('xolox#misc#os', ['shell', '.'])
call TPluginAutoload('xolox#misc#path', ['shell', '.'])
call TPluginAutoload('xolox#misc#str', ['shell', '.'])
call TPluginAutoload('xolox#misc#timer', ['shell', '.'])
call TPluginAutoload('xolox#shell', ['shell', '.'])
call TPluginAutoload('sideways#parsing', ['sideways.vim', '.'])
call TPluginAutoload('sideways#util', ['sideways.vim', '.'])
call TPluginAutoload('sideways', ['sideways.vim', '.'])
call TPluginAutoload('splice', ['splice.vim', '.'])
call TPluginAutoload('stakeholders#delayed', ['stakeholders_vim', '.'])
call TPluginAutoload('stakeholders#immediate', ['stakeholders_vim', '.'])
call TPluginAutoload('stakeholders', ['stakeholders_vim', '.'])
call TPluginAutoload('switch#mapping', ['switch.vim', '.'])
call TPluginAutoload('switch#match', ['switch.vim', '.'])
call TPluginAutoload('switch', ['switch.vim', '.'])
call TPluginAutoload('syntastic#c', ['syntastic', '.'])
call TPluginAutoload('syntastic#makeprg', ['syntastic', '.'])
call TPluginAutoload('syntastic#util', ['syntastic', '.'])
call TPluginAutoload('tabular', ['tabular', '.'])
call TPluginAutoload('tagbar', ['tagbar', '.'])
call TPluginAutoload('tcomment', ['tcomment_vim', '.'])
call TPluginAutoload('templator#expander#tskel', ['templator_vim', '.'])
call TPluginAutoload('templator#expander#tvim', ['templator_vim', '.'])
call TPluginAutoload('templator', ['templator_vim', '.'])
call TPluginAutoload('tinykeymap#map#para_move', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnf', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnfd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_cnfx', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Filter_fuzzy', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Object', ['tlib_vim', '.'])
call TPluginAutoload('tlib#Test', ['tlib_vim', '.'])
call TPluginAutoload('tlib#TestChild', ['tlib_vim', '.'])
call TPluginAutoload('tlib#World', ['tlib_vim', '.'])
call TPluginAutoload('tlib#agent', ['tlib_vim', '.'])
call TPluginAutoload('tlib#arg', ['tlib_vim', '.'])
call TPluginAutoload('tlib#autocmdgroup', ['tlib_vim', '.'])
call TPluginAutoload('tlib#balloon', ['tlib_vim', '.'])
call TPluginAutoload('tlib#bitwise', ['tlib_vim', '.'])
call TPluginAutoload('tlib#buffer', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cache', ['tlib_vim', '.'])
call TPluginAutoload('tlib#char', ['tlib_vim', '.'])
call TPluginAutoload('tlib#cmd', ['tlib_vim', '.'])
call TPluginAutoload('tlib#comments', ['tlib_vim', '.'])
call TPluginAutoload('tlib#date', ['tlib_vim', '.'])
call TPluginAutoload('tlib#dir', ['tlib_vim', '.'])
call TPluginAutoload('tlib#eval', ['tlib_vim', '.'])
call TPluginAutoload('tlib#file', ['tlib_vim', '.'])
call TPluginAutoload('tlib#fixes', ['tlib_vim', '.'])
call TPluginAutoload('tlib#hash', ['tlib_vim', '.'])
call TPluginAutoload('tlib#hook', ['tlib_vim', '.'])
call TPluginAutoload('tlib#input', ['tlib_vim', '.'])
call TPluginAutoload('tlib#list', ['tlib_vim', '.'])
call TPluginAutoload('tlib#map', ['tlib_vim', '.'])
call TPluginAutoload('tlib#normal', ['tlib_vim', '.'])
call TPluginAutoload('tlib#notify', ['tlib_vim', '.'])
call TPluginAutoload('tlib#number', ['tlib_vim', '.'])
call TPluginAutoload('tlib#paragraph', ['tlib_vim', '.'])
call TPluginAutoload('tlib#persistent', ['tlib_vim', '.'])
call TPluginAutoload('tlib#progressbar', ['tlib_vim', '.'])
call TPluginAutoload('tlib#rx', ['tlib_vim', '.'])
call TPluginAutoload('tlib#scratch', ['tlib_vim', '.'])
call TPluginAutoload('tlib#signs', ['tlib_vim', '.'])
call TPluginAutoload('tlib#string', ['tlib_vim', '.'])
call TPluginAutoload('tlib#syntax', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tab', ['tlib_vim', '.'])
call TPluginAutoload('tlib#tag', ['tlib_vim', '.'])
call TPluginAutoload('tlib#textobjects', ['tlib_vim', '.'])
call TPluginAutoload('tlib#time', ['tlib_vim', '.'])
call TPluginAutoload('tlib#type', ['tlib_vim', '.'])
call TPluginAutoload('tlib#url', ['tlib_vim', '.'])
call TPluginAutoload('tlib#var', ['tlib_vim', '.'])
call TPluginAutoload('tlib#vcs', ['tlib_vim', '.'])
call TPluginAutoload('tlib#vim', ['tlib_vim', '.'])
call TPluginAutoload('tlib#win', ['tlib_vim', '.'])
call TPluginAutoload('tlib', ['tlib_vim', '.'])
call TPluginAutoload('tplugin#autoload#extradite', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#fugitive', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#fuzzyfinder', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#supertab', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#autoload#vcscommand', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin#vcsdo', ['tplugin_vim', '.'])
call TPluginAutoload('tplugin', ['tplugin_vim', '.'])
call TPluginAutoload('tskeleton#abbreviations', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#completefunc', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#functions', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#mini', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#omnicomplete', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#skeleton', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#snippets', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton#tags', ['tskeleton_vim', '.'])
call TPluginAutoload('tskeleton', ['tskeleton_vim', '.'])
call TPluginAutoload('buf_utils', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('cached_file_contents', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('env_reload', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('funcref', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('glob', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tiny_cmd', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tovl#scratch_buffer', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('tovl#ui#filter_list', ['vim-addon-mw-utils', '.'])
call TPluginAutoload('acp', ['vim-autocomplpop-13', '.'])
call TPluginAutoload('togglebg', ['vim-colors-solarized', '.'])
call TPluginAutoload('cs', ['vim-csharp', '.'])
call TPluginAutoload('dispatch#headless', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#iterm', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#screen', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#tmux', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#windows', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch#x11', ['vim-dispatch', '.'])
call TPluginAutoload('dispatch', ['vim-dispatch', '.'])
call TPluginAutoload('color_helper', ['vim-indent-guides', '.'])
call TPluginAutoload('indent_guides', ['vim-indent-guides', '.'])
call TPluginAutoload('xolox#lua', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#lua_data', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#compat', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-lua-ftplugin', '.'])
call TPluginAutoload('xolox#luainspect', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#compat', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-lua-inspect', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-lua-inspect', '.'])
call TPluginAutoload('multiple_cursors', ['vim-multiple-cursors', '.'])
call TPluginAutoload('Pl#Colorscheme', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Hi', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Match', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Mod', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Parser', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Segment', ['vim-powerline', '.'])
call TPluginAutoload('Pl#Theme', ['vim-powerline', '.'])
call TPluginAutoload('Pl', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Colorschemes#default', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Colorschemes#solarized', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Colorschemes#solarized16', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Colorschemes#solarized256', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Functions#ft_man', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Functions#fugitive', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Functions#hgrev', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Functions#syntastic', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Functions', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Matches', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#ctrlp', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#ft_man', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#fugitive', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#hgrev', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#rvm', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#syntastic', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#tagbar', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments#virtualenv', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Segments', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Themes#default', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Themes#solarized16', ['vim-powerline', '.'])
call TPluginAutoload('Powerline#Themes#solarized256', ['vim-powerline', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#compat', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-reload', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-reload', '.'])
call TPluginAutoload('xolox#reload', ['vim-reload', '.'])
call TPluginAutoload('repeat', ['vim-repeat', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-session', '.'])
call TPluginAutoload('xolox#session', ['vim-session', '.'])
call TPluginAutoload('xolox#misc#buffer', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#complete', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#escape', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#list', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#msg', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#open', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#option', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#os', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#path', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#str', ['vim-shell', '.'])
call TPluginAutoload('xolox#misc#timer', ['vim-shell', '.'])
call TPluginAutoload('xolox#shell', ['vim-shell', '.'])
call TPluginAutoload('snipMate', ['vim-snipmate', '.'])
call TPluginAutoload('snipMate_python_demo', ['vim-snipmate', '.'])
call TPluginAutoload('Powerline#Colorschemes#solarized16', ['vim-solarized-powerline', '.'])
call TPluginAutoload('Powerline#Colorschemes#solarized256', ['vim-solarized-powerline', '.'])
call TPluginAutoload('Powerline#Themes#long', ['vim-solarized-powerline', '.'])
call TPluginAutoload('Powerline#Themes#short', ['vim-solarized-powerline', '.'])
call TPluginAutoload('textobj#user', ['vim-textobj-user', '.'])
call TPluginAutoload('vimprj', ['vimprj', '.'])
call TPluginAutoload('vimproc#filepath', ['vimproc', '.'])
call TPluginAutoload('vimproc#lexer', ['vimproc', '.'])
call TPluginAutoload('vimproc#parser', ['vimproc', '.'])
call TPluginAutoload('vimproc#util', ['vimproc', '.'])
call TPluginAutoload('vimproc', ['vimproc', '.'])
call TPluginAutoload('neocomplcache#sources#vimshell_complete', ['vimshell', '.'])
call TPluginAutoload('unite#kinds#vimshell_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_external_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_history', ['vimshell', '.'])
call TPluginAutoload('unite#sources#vimshell_zsh_complete', ['vimshell', '.'])
call TPluginAutoload('vimshell#altercmd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#alias', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#bg', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#build', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#cd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#clear', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#dirs', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#echo', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#eval', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#exe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#exit', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#galias', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gcd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gendoc', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#gexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#h', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#histdel', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#history', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#iexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#less', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#let', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#ls', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#mkcd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#nop', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#open', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#popd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#pwd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#repeat', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#scp', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#sexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#shell', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#source', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#source_shellcmd', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#ssh', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#sudo', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#texe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#time', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vexe', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#view', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vim', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vimdiff', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#vimsh', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#whereis', ['vimshell', '.'])
call TPluginAutoload('vimshell#commands#which', ['vimshell', '.'])
call TPluginAutoload('vimshell#complete#helper', ['vimshell', '.'])
call TPluginAutoload('vimshell#complete', ['vimshell', '.'])
call TPluginAutoload('vimshell#help', ['vimshell', '.'])
call TPluginAutoload('vimshell#history', ['vimshell', '.'])
call TPluginAutoload('vimshell#hook', ['vimshell', '.'])
call TPluginAutoload('vimshell#int_mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#interactive', ['vimshell', '.'])
call TPluginAutoload('vimshell#mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#parser', ['vimshell', '.'])
call TPluginAutoload('vimshell#term_mappings', ['vimshell', '.'])
call TPluginAutoload('vimshell#terminal', ['vimshell', '.'])
call TPluginAutoload('vimshell#util', ['vimshell', '.'])
call TPluginAutoload('vimshell', ['vimshell', '.'])
call TPluginAutoload('vital#_08a462e#data#list', ['vimshell', '.'])
call TPluginAutoload('vital#_08a462e#prelude', ['vimshell', '.'])
call TPluginAutoload('vital#_08a462e#vim#buffer_manager', ['vimshell', '.'])
call TPluginAutoload('vital#_08a462e', ['vimshell', '.'])
call TPluginAutoload('vital', ['vimshell', '.'])
call TPluginAutoload('vundle#config', ['vundle', '.'])
call TPluginAutoload('vundle#installer', ['vundle', '.'])
call TPluginAutoload('vundle#scripts', ['vundle', '.'])
call TPluginAutoload('vundle', ['vundle', '.'])
call TPluginAutoload('webapi#atom', ['webapi-vim', '.'])
call TPluginAutoload('webapi#base64', ['webapi-vim', '.'])
call TPluginAutoload('webapi#bit', ['webapi-vim', '.'])
call TPluginAutoload('webapi#feed', ['webapi-vim', '.'])
call TPluginAutoload('webapi#hmac', ['webapi-vim', '.'])
call TPluginAutoload('webapi#html', ['webapi-vim', '.'])
call TPluginAutoload('webapi#http', ['webapi-vim', '.'])
call TPluginAutoload('webapi#json', ['webapi-vim', '.'])
call TPluginAutoload('webapi#jsonrpc', ['webapi-vim', '.'])
call TPluginAutoload('webapi#metaweblog', ['webapi-vim', '.'])
call TPluginAutoload('webapi#oauth', ['webapi-vim', '.'])
call TPluginAutoload('webapi#sha1', ['webapi-vim', '.'])
call TPluginAutoload('webapi#soap', ['webapi-vim', '.'])
call TPluginAutoload('webapi#ucs', ['webapi-vim', '.'])
call TPluginAutoload('webapi#xml', ['webapi-vim', '.'])
call TPluginAutoload('webapi#xmlrpc', ['webapi-vim', '.'])
call TPluginRegisterRepo('AutoComplPop')
call TPluginRegisterPlugin('AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpEnable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpDisable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpLock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AcpUnlock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopEnable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopDisable', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopLock', 'AutoComplPop', 'acp')
call TPluginCommand('command! -bar -narg=0 AutoComplPopUnlock', 'AutoComplPop', 'acp')
call TPluginRegisterRepo('CSApprox')
call TPluginRegisterPlugin('CSApprox', 'CSApprox')
call TPluginCommand('command! -bang -nargs=1 -complete=file -bar CSApproxSnapshot', 'CSApprox', 'CSApprox')
call TPluginCommand('command -bang -bar CSApprox', 'CSApprox', 'CSApprox')
call TPluginRegisterRepo('Command-T')
call TPluginRegisterPlugin('Command-T', 'command-t')
call TPluginCommand('command CommandTBuffer', 'Command-T', 'command-t')
call TPluginCommand('command CommandTJump', 'Command-T', 'command-t')
call TPluginCommand('command CommandTTag', 'Command-T', 'command-t')
call TPluginCommand('command -nargs=? -complete=dir CommandT', 'Command-T', 'command-t')
call TPluginCommand('command CommandTFlush', 'Command-T', 'command-t')
call TPluginFunction('CommandTHandleKey', 'Command-T', 'command-t')
call TPluginFunction('CommandTBackspace', 'Command-T', 'command-t')
call TPluginFunction('CommandTDelete', 'Command-T', 'command-t')
call TPluginFunction('CommandTAcceptSelection', 'Command-T', 'command-t')
call TPluginFunction('CommandTAcceptSelectionTab', 'Command-T', 'command-t')
call TPluginFunction('CommandTAcceptSelectionSplit', 'Command-T', 'command-t')
call TPluginFunction('CommandTAcceptSelectionVSplit', 'Command-T', 'command-t')
call TPluginFunction('CommandTRefresh', 'Command-T', 'command-t')
call TPluginFunction('CommandTToggleFocus', 'Command-T', 'command-t')
call TPluginFunction('CommandTCancel', 'Command-T', 'command-t')
call TPluginFunction('CommandTSelectNext', 'Command-T', 'command-t')
call TPluginFunction('CommandTSelectPrev', 'Command-T', 'command-t')
call TPluginFunction('CommandTClear', 'Command-T', 'command-t')
call TPluginFunction('CommandTCursorLeft', 'Command-T', 'command-t')
call TPluginFunction('CommandTCursorRight', 'Command-T', 'command-t')
call TPluginFunction('CommandTCursorEnd', 'Command-T', 'command-t')
call TPluginFunction('CommandTCursorStart', 'Command-T', 'command-t')
call TPluginRegisterPlugin('Decho', 'Decho')
call TPluginCommand('com! -nargs=+ -complete=expression Decho', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=+ -complete=expression Dredir', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 -range=% DechoOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 -range=% DechoOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 Dhide', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 Dshow', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoMsgOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoMsgOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoRemOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoRemOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoSep', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? Dsep', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoVarOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoVarOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoTabOn', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=? DechoTabOff', 'Decho', 'Decho')
call TPluginCommand('com! -nargs=0 DechoPause', 'Decho', 'Decho')
call TPluginFunction('Decho', 'Decho', 'Decho')
call TPluginFunction('Dfunc', 'Decho', 'Decho')
call TPluginFunction('Dret', 'Decho', 'Decho')
call TPluginFunction('DechoOn', 'Decho', 'Decho')
call TPluginFunction('DechoOff', 'Decho', 'Decho')
call TPluginFunction('DechoDepth', 'Decho', 'Decho')
call TPluginFunction('Dredir', 'Decho', 'Decho')
call TPluginFunction('DechoSep', 'Decho', 'Decho')
call TPluginFunction('DechoPause', 'Decho', 'Decho')
call TPluginRegisterPlugin('Decho', 'cecutil')
call TPluginMap('nmap <silent> <Plug>SaveWinPosn', 'Decho', 'cecutil')
call TPluginMap('nmap <silent> <Plug>RestoreWinPosn', 'Decho', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 SWP', 'Decho', 'cecutil')
call TPluginCommand('com! -bar -nargs=0 RWP', 'Decho', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 SM', 'Decho', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 RM', 'Decho', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 DM', 'Decho', 'cecutil')
call TPluginFunction('SaveWinPosn', 'Decho', 'cecutil')
call TPluginFunction('RestoreWinPosn', 'Decho', 'cecutil')
call TPluginFunction('GoWinbufnr', 'Decho', 'cecutil')
call TPluginFunction('SaveMark', 'Decho', 'cecutil')
call TPluginFunction('RestoreMark', 'Decho', 'cecutil')
call TPluginFunction('DestroyMark', 'Decho', 'cecutil')
call TPluginFunction('QArgSplitter', 'Decho', 'cecutil')
call TPluginFunction('SaveUserMaps', 'Decho', 'cecutil')
call TPluginFunction('RestoreUserMaps', 'Decho', 'cecutil')
call TPluginRegisterRepo('DrawIt')
call TPluginRegisterPlugin('DrawIt', 'DrawItPlugin')
call TPluginCommand('com! -nargs=0 -bang DrawIt', 'DrawIt', 'DrawItPlugin')
call TPluginCommand('com! -nargs=? DIstart', 'DrawIt', 'DrawItPlugin')
call TPluginCommand('com! -nargs=0 DIstop', 'DrawIt', 'DrawItPlugin')
call TPluginMap('noremap <silent> <Plug>DrawItStart', 'DrawIt', 'DrawItPlugin')
call TPluginMap('noremap <silent> <Plug>DrawItStop', 'DrawIt', 'DrawItPlugin')
call TPluginRegisterPlugin('DrawIt', 'cecutil')
call TPluginCommand('com! -bar -nargs=? RWP', 'DrawIt', 'cecutil')
call TPluginCommand('com! -bar -nargs=1 WLR', 'DrawIt', 'cecutil')
call TPluginRegisterRepo('FuzzyFinder')
call TPluginRegisterPlugin('FuzzyFinder', 'fuf')
call TPluginCommand('command! -bang -narg=0 FufEditDataFile', 'FuzzyFinder', 'fuf')
call TPluginCommand('command! -bang -narg=0 FufRenewCache', 'FuzzyFinder', 'fuf')
call TPluginRegisterRepo('IComplete')
call TPluginRegisterPlugin('IComplete', 'cppcomplete')
call TPluginFunction('cppcomplete#CompleteMain', 'IComplete', 'cppcomplete')
call TPluginFunction('cppcomplete#Complete', 'IComplete', 'cppcomplete')
call TPluginFunction('cppcomplete#CompleteDot', 'IComplete', 'cppcomplete')
call TPluginFunction('cppcomplete#CompleteArrow', 'IComplete', 'cppcomplete')
call TPluginFunction('cppcomplete#CompleteColon', 'IComplete', 'cppcomplete')
call TPluginRegisterPlugin('IComplete', 'icomplete')
call TPluginRegisterRepo('IndexedSearch')
call TPluginRegisterPlugin('IndexedSearch', 'IndexedSearch')
call TPluginCommand('command! ShowSearchIndex', 'IndexedSearch', 'IndexedSearch')
call TPluginRegisterRepo('L9')
call TPluginRegisterPlugin('L9', 'l9')
call TPluginCommand('command -nargs=* L9Assert', 'L9', 'l9')
call TPluginCommand('command -nargs=1 L9Timer', 'L9', 'l9')
call TPluginCommand('command -nargs=0 L9TimerStop', 'L9', 'l9')
call TPluginCommand('command -nargs=0 L9TimerDump', 'L9', 'l9')
call TPluginCommand('command -nargs=? L9GrepBuffer', 'L9', 'l9')
call TPluginCommand('command -nargs=? L9GrepBufferAll', 'L9', 'l9')
call TPluginRegisterRepo('MatchTagAlways')
call TPluginRegisterPlugin('MatchTagAlways', 'MatchTagAlways')
call TPluginRegisterRepo('NrrwRgn')
call TPluginRegisterPlugin('NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range -bang NRPrepare', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range NarrowRegion', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NRMulti', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NarrowWindow', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NRLast', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range -bang NR', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -range NRP', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang -range NRV', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! NUD', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NW', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NRM', 'NrrwRgn', 'NrrwRgn')
call TPluginCommand('com! -bang NRL', 'NrrwRgn', 'NrrwRgn')
call TPluginMap('xnoremap <unique> <script> <Plug>NrrwrgnDo', 'NrrwRgn', 'NrrwRgn')
call TPluginMap('xnoremap <unique> <script> <Plug>NrrwrgnBangDo', 'NrrwRgn', 'NrrwRgn')
call TPluginRegisterRepo('SQLUtilities')
call TPluginRegisterPlugin('SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -range=% -nargs=* SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -range -nargs=* SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUCreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUGetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUGetColumnDataType', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUCreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginCommand('command! -nargs=* SQLUToggleValue', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('vmap <unique> <script> <Plug>SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUFormatStmts', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('vmap <unique> <script> <Plug>SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUFormatter', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUCreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUGetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUGetColumnDataType', 'SQLUtilities', 'SQLUtilities')
call TPluginMap('nmap <unique> <script> <Plug>SQLUCreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_Menu', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_CreateColumnList', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_GetColumnDatatype', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_GetColumnDef', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_CreateProcedure', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_RemoveMatchingColumns', 'SQLUtilities', 'SQLUtilities')
call TPluginFunction('SQLU_ToggleValue', 'SQLUtilities', 'SQLUtilities')
call TPluginRegisterRepo('SaveSigns.vim')
call TPluginRegisterPlugin('SaveSigns.vim', 'savesignsPlugin')
call TPluginCommand('com! -nargs=? -bang -complete=file SaveSigns', 'SaveSigns.vim', 'savesignsPlugin')
call TPluginRegisterRepo('SearchComplete')
call TPluginRegisterPlugin('SearchComplete', 'SearchComplete')
call TPluginFunction('SearchCompleteStart', 'SearchComplete', 'SearchComplete')
call TPluginFunction('SearchComplete', 'SearchComplete', 'SearchComplete')
call TPluginFunction('SearchCompleteStop', 'SearchComplete', 'SearchComplete')
call TPluginRegisterRepo('ShowMarks')
call TPluginRegisterPlugin('ShowMarks', 'showmarks')
call TPluginCommand('com! -nargs=0 ShowMarksToggle', 'ShowMarks', 'showmarks')
call TPluginCommand('com! -nargs=0 ShowMarksOn', 'ShowMarks', 'showmarks')
call TPluginCommand('com! -nargs=0 ShowMarksClearMark', 'ShowMarks', 'showmarks')
call TPluginCommand('com! -nargs=0 ShowMarksClearAll', 'ShowMarks', 'showmarks')
call TPluginCommand('com! -nargs=0 ShowMarksPlaceMark', 'ShowMarks', 'showmarks')
call TPluginRegisterRepo('SingleCompile')
call TPluginRegisterPlugin('SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=* SCCompile', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=* SCCompileRun', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=* SCCompileRunAsync', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=* SingleCompile', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=* SingleCompileRun', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=+ SCCompileAF', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=+ SCCompileRunAF', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command -nargs=+ SCCompileRunAsyncAF', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCIsRunningAsync', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCTerminateAsync', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCChooseCompiler', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCChooseInterpreter', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCViewResult', 'SingleCompile', 'SingleCompile')
call TPluginCommand('command SCViewResultAsync', 'SingleCompile', 'SingleCompile')
call TPluginRegisterRepo('StripWhiteSpaces')
call TPluginRegisterPlugin('StripWhiteSpaces', 'StripWhiteSpaces')
call TPluginCommand('command! -range=% StripWhiteSpaces', 'StripWhiteSpaces', 'StripWhiteSpaces')
call TPluginRegisterPlugin('UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_FileTypeChanged', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnipsEdit', 'UltiSnips', 'UltiSnips')
call TPluginCommand('command! -nargs=? UltiSnipsEdit', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnipsAddFiletypes', 'UltiSnips', 'UltiSnips')
call TPluginCommand('command! -nargs=1 UltiSnipsAddFiletypes', 'UltiSnips', 'UltiSnips')
call TPluginFunction('CompensateForPUM', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ExpandSnippet', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ExpandSnippetOrJump', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_ListSnippets', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_SaveLastVisualSelection', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_JumpBackwards', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_JumpForwards', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_AddSnippet', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_Anon', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_MapKeys', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_CursorMoved', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_EnteredInsertMode', 'UltiSnips', 'UltiSnips')
call TPluginFunction('UltiSnips_LeavingBuffer', 'UltiSnips', 'UltiSnips')
call TPluginRegisterPlugin('UltiSnips', 'snipMate_compatibility')
call TPluginFunction('Filename', 'UltiSnips', 'snipMate_compatibility')
call TPluginRegisterRepo('zencoding-vim')
call TPluginRegisterPlugin('zencoding-vim', 'zencoding')
call TPluginCommand('command! -nargs=1 Zen', 'zencoding-vim', 'zencoding')
call TPluginRegisterRepo('ZoomWin')
call TPluginRegisterPlugin('ZoomWin', 'ZoomWinPlugin')
call TPluginMap('nnoremap <silent> <script> <Plug>ZoomWin', 'ZoomWin', 'ZoomWinPlugin')
call TPluginCommand('com! ZoomWin', 'ZoomWin', 'ZoomWinPlugin')
call TPluginFunction('ZoomWin', 'ZoomWin', 'ZoomWinPlugin')
call TPluginRegisterRepo('ag.vim')
call TPluginRegisterPlugin('ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file Ag', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file AgAdd', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file AgFromSearch', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file LAg', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file LAgAdd', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=file AgFile', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=help AgHelp', 'ag.vim', 'ag')
call TPluginCommand('command! -bang -nargs=* -complete=help LAgHelp', 'ag.vim', 'ag')
call TPluginRegisterPlugin('bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CheckGlobal', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_InitMenu', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_InitMenuHeader', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_MenuTitle', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_EnvirMenus', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_BuiltinMenus', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ShoptMenus', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_RereadTemplates', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_BrowseTemplateFiles', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ReadTemplates', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Style', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_StyleList', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_OpenFold', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_InsertTemplate', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Input', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_AdjustLineEndComm', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_GetLineEndCommCol', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_EndOfLineComment', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_MultiLineEndComments', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CommentToggle', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_echo_comment', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_remove_echo', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SubstituteTag', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CommentVimModeline', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_BuiltinComplete', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ScriptSectionList', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ScriptSectionListInsert', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_KeywordCommentList', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_KeywordCommentListInsert', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_help', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SyntaxCheckOptions', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SyntaxCheckOptionsLocal', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SyntaxCheck', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Debugger', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Toggle_Gvim_Xterm', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Toggle_Gvim_Xterm_MS', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_MakeScriptExecutable', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_BashCmdLineArguments', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Run', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_XtermSize', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_set', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_shopt', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ScriptCmdLineArguments', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CodeSnippets', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Hardcopy', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_Settings', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_HelpBASHsupport', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_InsertDateAndTime', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_HighlightJumpTargets', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_JumpCtrlJ', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ExpandUserMacros', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ApplyFlag', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ExpandSingleMacro', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_InsertMacroValue', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_DateAndTime', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CreateMenusDelayed', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_CreateGuiMenus', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_ToolMenu', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_RemoveGuiMenus', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_SaveOption', 'bash-support.vim', 'bash-support')
call TPluginFunction('BASH_RestoreOption', 'bash-support.vim', 'bash-support')
call TPluginRegisterPlugin('c.vim', 'c')
call TPluginFunction('C_CheckGlobal', 'c.vim', 'c')
call TPluginFunction('C_InitMenus', 'c.vim', 'c')
call TPluginFunction('C_MenuTitle', 'c.vim', 'c')
call TPluginFunction('C_CIncludeMenus', 'c.vim', 'c')
call TPluginFunction('C_CIosFlagMenus', 'c.vim', 'c')
call TPluginFunction('C_Input', 'c.vim', 'c')
call TPluginFunction('C_AdjustLineEndComm', 'c.vim', 'c')
call TPluginFunction('C_GetLineEndCommCol', 'c.vim', 'c')
call TPluginFunction('C_EndOfLineComment', 'c.vim', 'c')
call TPluginFunction('C_Comment_C_SectionAll', 'c.vim', 'c')
call TPluginFunction('C_Comment_H_SectionAll', 'c.vim', 'c')
call TPluginFunction('C_CodeToCommentC', 'c.vim', 'c')
call TPluginFunction('C_CodeToCommentCpp', 'c.vim', 'c')
call TPluginFunction('C_RemoveCComment', 'c.vim', 'c')
call TPluginFunction('C_CommentToCode', 'c.vim', 'c')
call TPluginFunction('C_CommentToggle', 'c.vim', 'c')
call TPluginFunction('C_PPIf0', 'c.vim', 'c')
call TPluginFunction('C_PPIf0Remove', 'c.vim', 'c')
call TPluginFunction('C_LegalizeName', 'c.vim', 'c')
call TPluginFunction('C_CodeSnippet', 'c.vim', 'c')
call TPluginFunction('C_ForTypeComplete', 'c.vim', 'c')
call TPluginFunction('C_CodeFor', 'c.vim', 'c')
call TPluginFunction('C_ProtoPick', 'c.vim', 'c')
call TPluginFunction('C_ProtoInsert', 'c.vim', 'c')
call TPluginFunction('C_ProtoClear', 'c.vim', 'c')
call TPluginFunction('C_ProtoShow', 'c.vim', 'c')
call TPluginFunction('C_EscapeBlanks', 'c.vim', 'c')
call TPluginFunction('C_Compile', 'c.vim', 'c')
call TPluginFunction('C_CheckForMain', 'c.vim', 'c')
call TPluginFunction('C_Link', 'c.vim', 'c')
call TPluginFunction('C_Run', 'c.vim', 'c')
call TPluginFunction('C_Arguments', 'c.vim', 'c')
call TPluginFunction('C_Toggle_Gvim_Xterm', 'c.vim', 'c')
call TPluginFunction('C_XtermSize', 'c.vim', 'c')
call TPluginFunction('C_ChooseMakefile', 'c.vim', 'c')
call TPluginFunction('C_Make', 'c.vim', 'c')
call TPluginFunction('C_MakeClean', 'c.vim', 'c')
call TPluginFunction('C_MakeArguments', 'c.vim', 'c')
call TPluginFunction('C_MakeExeToRun', 'c.vim', 'c')
call TPluginFunction('C_SplintArguments', 'c.vim', 'c')
call TPluginFunction('C_SplintCheck', 'c.vim', 'c')
call TPluginFunction('C_CodeCheckArguments', 'c.vim', 'c')
call TPluginFunction('C_CodeCheck', 'c.vim', 'c')
call TPluginFunction('C_Indent', 'c.vim', 'c')
call TPluginFunction('C_HlMessage', 'c.vim', 'c')
call TPluginFunction('C_Settings', 'c.vim', 'c')
call TPluginFunction('C_Hardcopy', 'c.vim', 'c')
call TPluginFunction('C_HelpCsupport', 'c.vim', 'c')
call TPluginFunction('C_Help', 'c.vim', 'c')
call TPluginFunction('C_CreateMenusDelayed', 'c.vim', 'c')
call TPluginFunction('C_CreateGuiMenus', 'c.vim', 'c')
call TPluginFunction('C_ToolMenu', 'c.vim', 'c')
call TPluginFunction('C_RemoveGuiMenus', 'c.vim', 'c')
call TPluginFunction('C_RereadTemplates', 'c.vim', 'c')
call TPluginFunction('C_BrowseTemplateFiles', 'c.vim', 'c')
call TPluginFunction('C_CheckAndRereadTemplates', 'c.vim', 'c')
call TPluginFunction('C_ReadTemplates', 'c.vim', 'c')
call TPluginFunction('C_Style', 'c.vim', 'c')
call TPluginFunction('C_StyleList', 'c.vim', 'c')
call TPluginFunction('C_OpenFold', 'c.vim', 'c')
call TPluginFunction('C_InsertTemplate', 'c.vim', 'c')
call TPluginFunction('C_HighlightJumpTargets', 'c.vim', 'c')
call TPluginFunction('C_JumpCtrlJ', 'c.vim', 'c')
call TPluginFunction('C_ExpandUserMacros', 'c.vim', 'c')
call TPluginFunction('C_ApplyFlag', 'c.vim', 'c')
call TPluginFunction('C_ExpandSingleMacro', 'c.vim', 'c')
call TPluginFunction('C_SetSmallCommentStyle', 'c.vim', 'c')
call TPluginFunction('C_InsertMacroValue', 'c.vim', 'c')
call TPluginFunction('C_InsertDateAndTime', 'c.vim', 'c')
call TPluginFunction('C_DateAndTime', 'c.vim', 'c')
call TPluginFunction('C_InsertTemplateWrapper', 'c.vim', 'c')
call TPluginFunction('C_CFileSectionList', 'c.vim', 'c')
call TPluginFunction('C_CFileSectionListInsert', 'c.vim', 'c')
call TPluginFunction('C_HFileSectionList', 'c.vim', 'c')
call TPluginFunction('C_HFileSectionListInsert', 'c.vim', 'c')
call TPluginFunction('C_KeywordCommentList', 'c.vim', 'c')
call TPluginFunction('C_KeywordCommentListInsert', 'c.vim', 'c')
call TPluginFunction('C_SpecialCommentList', 'c.vim', 'c')
call TPluginFunction('C_SpecialCommentListInsert', 'c.vim', 'c')
call TPluginFunction('C_CleanDirNameList', 'c.vim', 'c')
call TPluginFunction('C_IncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_StdLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_C99LibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_CppLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_CppCLibraryIncludesInsert', 'c.vim', 'c')
call TPluginFunction('C_IncludesList', 'c.vim', 'c')
call TPluginFunction('C_StdLibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_C99LibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_CppLibraryIncludesList', 'c.vim', 'c')
call TPluginFunction('C_CppCLibraryIncludesList', 'c.vim', 'c')
call TPluginRegisterPlugin('cocoa.vim', 'cocoa')
call TPluginRegisterRepo('colorv.vim')
call TPluginRegisterPlugin('colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorV', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMid', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMin', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVMax', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVQuit', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVView', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVInsert', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVEdit', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVEditAll', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=1 ColorVEditTo', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVName', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=+ ColorVList', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=* ColorVTurn2', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVAutoPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVNoAutoPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreview', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreviewArea', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPreviewLine', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVClear', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVPicker', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVScheme', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=0 ColorVSchemeFav', 'colorv.vim', 'colorv')
call TPluginCommand('command! -nargs=? ColorVSchemeNew', 'colorv.vim', 'colorv')
call TPluginRegisterRepo('ctrlp.vim')
call TPluginRegisterPlugin('ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlP', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPMRUFiles', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBuffer', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? CtrlPLastMode', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPClearCache', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPClearAllCaches', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar ClearCtrlPCache', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar ClearAllCtrlPCaches', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPCurWD', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPCurFile', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPRoot', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPQuickfix', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPDir', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPBufTag', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBufTagAll', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPRTS', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPUndo', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPLine', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=buffer CtrlPChange', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPChangeAll', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPMixed', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -bar CtrlPBookmarkDir', 'ctrlp.vim', 'ctrlp')
call TPluginCommand('com! -n=? -com=dir CtrlPBookmarkDirAdd', 'ctrlp.vim', 'ctrlp')
call TPluginRegisterRepo('dbext.vim')
call TPluginRegisterPlugin('dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ DBExecSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ DBExecSQLTopX', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBConnect', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBDisconnect', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBDisconnectAll', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBCommit', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBRollback', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBListConnections', 'dbext.vim', 'dbext')
call TPluginCommand('command! -range -nargs=0 DBExecRangeSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ Call', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Select', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Update', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Insert', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Delete', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Drop', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ -complete=customlist,dbext#DB_completeTables Alter', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=+ Create', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=1 DBSetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBGetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBSetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeSettings DBGetOption', 'dbext.vim', 'dbext')
call TPluginCommand('command! -range -nargs=0 -bang DBVarRangeAssign', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBListVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=1 -bang DBSetVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -complete=customlist,dbext#DB_completeVariable DBSetVar', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQL', 'dbext.vim', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -range DBExecVisualSQLTopX', 'dbext.vim', 'dbext')
call TPluginMap('xmap <unique> <script> <Plug>DBExecVisualTopXSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursor', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderCursor', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQLUnderCursorTopX', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQLUnderTopXCursor', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBExecSQL', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBExecSQL', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableWithWhere', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableWithWhere', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBSelectFromTableAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTableAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBSelectFromTableTopX', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBSelectFromTopXTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeTableAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeTableAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* -range DBDescribeProcedure', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedure', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBDescribeProcedureAskName', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBDescribeProcedureAskName', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBPromptForBufferParameters', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBPromptForBufferParameters', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=* DBListColumn', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListColumn', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListTable', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListTable', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListProcedure', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListProcedure', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=? DBListView', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBListView', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteTables', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteProcedures', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 -bang DBCompleteViews', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBCheckModeline', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBOrientationToggle', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBOrientationToggle', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBHistory', 'dbext.vim', 'dbext')
call TPluginMap('nmap <unique> <script> <Plug>DBHistory', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsOpen', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsClose', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsRefresh', 'dbext.vim', 'dbext')
call TPluginCommand('command! -nargs=0 DBResultsToggleResize', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getDictionaryName', 'dbext.vim', 'dbext')
call TPluginFunction('DB_DictionaryCreate', 'dbext.vim', 'dbext')
call TPluginFunction('DB_listOption', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getListColumn', 'dbext.vim', 'dbext')
call TPluginFunction('DB_getVisualBlock', 'dbext.vim', 'dbext')
call TPluginFunction('DB_execCmd', 'dbext.vim', 'dbext')
call TPluginRegisterRepo('delimitMate')
call TPluginRegisterPlugin('delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateCR', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateSpace', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateS-Tab', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <silent> <Plug>delimitMateDel', 'delimitMate', 'delimitMate')
call TPluginMap('inoremap <buffer> <Plug>delimitMateJumpMany', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateReload', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateTest', 'delimitMate', 'delimitMate')
call TPluginCommand('command! -bar DelimitMateSwitch', 'delimitMate', 'delimitMate')
call TPluginRegisterRepo('ftpsync')
call TPluginRegisterPlugin('ftpsync', 'ftpsync')
call TPluginFunction('FtpGetParam', 'ftpsync', 'ftpsync')
call TPluginFunction('FtpSetParam', 'ftpsync', 'ftpsync')
call TPluginFunction('FtpSetServer', 'ftpsync', 'ftpsync')
call TPluginFunction('FtpSetPath', 'ftpsync', 'ftpsync')
call TPluginFunction('FtpUpdate', 'ftpsync', 'ftpsync')
call TPluginFunction('FtpRefresh', 'ftpsync', 'ftpsync')
call TPluginRegisterRepo('genutils')
call TPluginRegisterPlugin('genutils', 'genutils')
call TPluginRegisterRepo('genutils-2.5')
call TPluginRegisterPlugin('genutils-2.5', 'genutils')
call TPluginRegisterRepo('gist-vim')
call TPluginRegisterPlugin('gist-vim', 'gist')
call TPluginCommand('command! -nargs=? -range=% Gist', 'gist-vim', 'gist')
call TPluginRegisterPlugin('git-vim', 'git')
call TPluginFunction('GitBranch', 'git-vim', 'git')
call TPluginFunction('ListGitBranches', 'git-vim', 'git')
call TPluginFunction('ListGitCommits', 'git-vim', 'git')
call TPluginFunction('GitDiff', 'git-vim', 'git')
call TPluginFunction('GitStatus', 'git-vim', 'git')
call TPluginFunction('GitLog', 'git-vim', 'git')
call TPluginFunction('GitAdd', 'git-vim', 'git')
call TPluginFunction('GitCommit', 'git-vim', 'git')
call TPluginFunction('GitCheckout', 'git-vim', 'git')
call TPluginFunction('GitPush', 'git-vim', 'git')
call TPluginFunction('GitPull', 'git-vim', 'git')
call TPluginFunction('GitCatFile', 'git-vim', 'git')
call TPluginFunction('GitBlame', 'git-vim', 'git')
call TPluginFunction('GitDoCommand', 'git-vim', 'git')
call TPluginFunction('GitVimDiffMerge', 'git-vim', 'git')
call TPluginFunction('GitVimDiffMergeDone', 'git-vim', 'git')
call TPluginCommand('command! -nargs=1 -complete=customlist,ListGitCommits GitCheckout', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* -complete=customlist,ListGitCommits GitDiff', 'git-vim', 'git')
call TPluginCommand('command! GitStatus', 'git-vim', 'git')
call TPluginCommand('command! -nargs=? GitAdd', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitLog', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitCommit', 'git-vim', 'git')
call TPluginCommand('command! -nargs=1 GitCatFile', 'git-vim', 'git')
call TPluginCommand('command! -nargs=? GitBlame', 'git-vim', 'git')
call TPluginCommand('command! -nargs=+ Git', 'git-vim', 'git')
call TPluginCommand('command! GitVimDiffMerge', 'git-vim', 'git')
call TPluginCommand('command! GitVimDiffMergeDone', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitPull', 'git-vim', 'git')
call TPluginCommand('command! GitPullRebase', 'git-vim', 'git')
call TPluginCommand('command! -nargs=* GitPush', 'git-vim', 'git')
call TPluginRegisterRepo('grep.vim')
call TPluginRegisterPlugin('grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Grep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Rgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepBuffer', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* Bgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepArgs', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Fgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Rfgrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Egrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Regrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Agrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file Ragrep', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file GrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepBufferAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* BgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* GrepArgsAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file FgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RfgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file EgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RegrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file AgrepAdd', 'grep.vim', 'grep')
call TPluginCommand('command! -nargs=* -complete=file RagrepAdd', 'grep.vim', 'grep')
call TPluginRegisterRepo('gundo.vim')
call TPluginRegisterPlugin('gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoToggle', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoShow', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoHide', 'gundo.vim', 'gundo')
call TPluginCommand('command! -nargs=0 GundoRenderGraph', 'gundo.vim', 'gundo')
call TPluginRegisterRepo('hexHighlight.vim')
call TPluginRegisterPlugin('hexHighlight.vim', 'hexHighlight')
call TPluginFunction('HexHighlight', 'hexHighlight.vim', 'hexHighlight')
call TPluginRegisterRepo('keepcase.vim')
call TPluginRegisterPlugin('keepcase.vim', 'keepcase')
call TPluginFunction('KeepCase', 'keepcase.vim', 'keepcase')
call TPluginFunction('KeepCaseSameLen', 'keepcase.vim', 'keepcase')
call TPluginCommand(':command! -nargs=1 -range SubstituteCase', 'keepcase.vim', 'keepcase')
call TPluginRegisterRepo('lisper-vim')
call TPluginRegisterPlugin('lisper-vim', 'lisper')
call TPluginCommand('command! LisperRepl', 'lisper-vim', 'lisper')
call TPluginCommand('command! LisperEvalLine', 'lisper-vim', 'lisper')
call TPluginCommand('command! -range=% LisperEvalBuffer', 'lisper-vim', 'lisper')
call TPluginCommand('command! -range=% LisperEvalBufferWithoutOutput', 'lisper-vim', 'lisper')
call TPluginCommand('command! LisperVimBang', 'lisper-vim', 'lisper')
call TPluginRegisterRepo('matchit')
call TPluginRegisterPlugin('matchit', 'matchit')
call TPluginCommand('command! -nargs=0 MatchDebug', 'matchit', 'matchit')
call TPluginRegisterRepo('maximize')
call TPluginRegisterPlugin('maximize', 'maximize')
call TPluginRegisterRepo('minimap-vim')
call TPluginRegisterPlugin('minimap-vim', 'minimap_loader')
TPluginAfter \V\\minimap-vim\\plugin\\ call TPluginVimEnter("minimap_loader")
call TPluginRegisterRepo('multiselect')
call TPluginRegisterPlugin('multiselect', 'multiselect')
call TPluginCommand('command! -range MSAdd', 'multiselect', 'multiselect')
call TPluginCommand('command! MSDelete', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% MSClear', 'multiselect', 'multiselect')
call TPluginCommand('command! MSRestore', 'multiselect', 'multiselect')
call TPluginCommand('command! MSRefresh', 'multiselect', 'multiselect')
call TPluginCommand('command! -range MSInvert', 'multiselect', 'multiselect')
call TPluginCommand('command! MSHide', 'multiselect', 'multiselect')
call TPluginCommand('command! -nargs=1 -complete=command MSExecCmd', 'multiselect', 'multiselect')
call TPluginCommand('command! -nargs=1 -complete=command MSExecNormalCmd', 'multiselect', 'multiselect')
call TPluginCommand('command! MSShow', 'multiselect', 'multiselect')
call TPluginCommand('command! MSNext', 'multiselect', 'multiselect')
call TPluginCommand('command! MSPrev', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSMatchAdd', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSVMatchAdd', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSMatchAddBySynGroup', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSVMatchAddBySynGroup', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSMatchAddByDiffHlGroup', 'multiselect', 'multiselect')
call TPluginCommand('command! -range=% -nargs=1 MSVMatchAddByDiffHlGroup', 'multiselect', 'multiselect')
call TPluginRegisterRepo('nerdcommenter')
call TPluginRegisterPlugin('nerdcommenter', 'NERD_commenter')
call TPluginFunction('NERDComment', 'nerdcommenter', 'NERD_commenter')
call TPluginMap('inoremap <silent> <plug>NERDCommenterInsert', 'nerdcommenter', 'NERD_commenter')
call TPluginMap('nnoremap <plug>NERDCommenterAltDelims', 'nerdcommenter', 'NERD_commenter')
call TPluginRegisterPlugin('nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=? -complete=dir -bar NERDTree', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=? -complete=dir -bar NERDTreeToggle', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeClose', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeMirror', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeFind', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeFocus', 'nerdtree', 'NERD_tree')
call TPluginCommand('command! -n=0 -bar NERDTreeCWD', 'nerdtree', 'NERD_tree')
TPluginAfter \V\\nerdtree\\plugin\\ call TPluginVimEnter("NERDTreeHijackNetrw")
call TPluginFunction('NERDTreeAddMenuItem', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddMenuSeparator', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddSubmenu', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeAddKeyMap', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeRender', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeFocus', 'nerdtree', 'NERD_tree')
call TPluginFunction('NERDTreeCWD', 'nerdtree', 'NERD_tree')
call TPluginRegisterPlugin('netrw.vim', 'netrwPlugin')
TPluginAfter \V\\netrw.vim\\plugin\\ call TPluginVimEnter("FileExplorer")
call TPluginCommand('com! -count=1 -nargs=* Nread', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -range=% -nargs=* Nwrite', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* NetUserPass', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* Nsource', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Explore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Sexplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Hexplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang -count=0 -complete=dir Vexplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -count=0 -complete=dir Texplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang Nexplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=* -bar -bang Pexplore', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -nargs=0 NetrwSettings', 'netrw.vim', 'netrwPlugin')
call TPluginCommand('com! -bang NetrwClean', 'netrw.vim', 'netrwPlugin')
call TPluginFunction('NetrwStatusLine', 'netrw.vim', 'netrwPlugin')
call TPluginFunction('NetUserPass', 'netrw.vim', 'netrwPlugin')
call TPluginRegisterRepo('quickfixsigns')
call TPluginRegisterPlugin('quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsSet', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsDisable', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsEnable', 'quickfixsigns', 'quickfixsigns')
call TPluginCommand('command! -nargs=+ -complete=customlist,quickfixsigns#CompleteSelect QuickfixsignsSelect', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSelect', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsUpdate', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsSet', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsBalloon', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsClear', 'quickfixsigns', 'quickfixsigns')
call TPluginFunction('QuickfixsignsRemoveBuffer', 'quickfixsigns', 'quickfixsigns')
call TPluginRegisterRepo('quickfixsigns_vim')
call TPluginRegisterPlugin('quickfixsigns_vim', 'quickfixsigns')
call TPluginCommand('command! QuickfixsignsToggle', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsUnique', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsToggle', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginFunction('QuickfixsignsListBufferSigns', 'quickfixsigns_vim', 'quickfixsigns')
call TPluginRegisterRepo('scratch.vim')
call TPluginRegisterPlugin('scratch.vim', 'scratch')
call TPluginCommand('command! -nargs=0 Scratch', 'scratch.vim', 'scratch')
call TPluginCommand('command! -nargs=0 Sscratch', 'scratch.vim', 'scratch')
call TPluginRegisterRepo('shell')
call TPluginRegisterPlugin('shell', 'shell')
call TPluginCommand('command! -bar -nargs=? -complete=file Open', 'shell', 'shell')
call TPluginCommand('command! -bar Maximize', 'shell', 'shell')
call TPluginCommand('command! -bar Fullscreen', 'shell', 'shell')
call TPluginRegisterRepo('sideways.vim')
call TPluginRegisterPlugin('sideways.vim', 'sideways')
call TPluginCommand('command! SidewaysLeft', 'sideways.vim', 'sideways')
call TPluginCommand('command! SidewaysRight', 'sideways.vim', 'sideways')
call TPluginRegisterPlugin('splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceInit', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceGrid', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceLoupe', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceCompare', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SplicePath', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceOriginal', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceOne', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceTwo', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceResult', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceDiff', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceDiffoff', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceScroll', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceLayout', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceNext', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SplicePrev', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceUse', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceUse1', 'splice.vim', 'splice')
call TPluginCommand('command! -nargs=0 SpliceUse2', 'splice.vim', 'splice')
call TPluginRegisterRepo('stakeholders_vim')
call TPluginRegisterPlugin('stakeholders_vim', 'stakeholders')
call TPluginCommand('command! -bang StakeholdersEnable', 'stakeholders_vim', 'stakeholders')
call TPluginCommand('command! -bang StakeholdersDisable', 'stakeholders_vim', 'stakeholders')
call TPluginRegisterRepo('supertab')
call TPluginRegisterPlugin('supertab', 'supertab')
call TPluginFunction('SuperTabSetDefaultCompletionType', 'supertab', 'supertab')
call TPluginFunction('SuperTabSetCompletionType', 'supertab', 'supertab')
call TPluginFunction('SuperTabAlternateCompletion', 'supertab', 'supertab')
call TPluginFunction('SuperTabLongestHighlight', 'supertab', 'supertab')
call TPluginFunction('SuperTab', 'supertab', 'supertab')
call TPluginFunction('SuperTabChain', 'supertab', 'supertab')
call TPluginFunction('SuperTabCodeComplete', 'supertab', 'supertab')
call TPluginMap('imap <script> <Plug>SuperTabForward', 'supertab', 'supertab')
call TPluginMap('imap <script> <Plug>SuperTabBackward', 'supertab', 'supertab')
call TPluginCommand('command SuperTabHelp', 'supertab', 'supertab')
call TPluginFunction('TestSuperTabCodeComplete', 'supertab', 'supertab')
call TPluginMap('imap <tab>', 'supertab', 'supertab')
call TPluginRegisterRepo('switch.vim')
call TPluginRegisterPlugin('switch.vim', 'switch')
call TPluginCommand('command! Switch', 'switch.vim', 'switch')
call TPluginRegisterRepo('syntastic')
call TPluginRegisterPlugin('syntastic', 'syntastic')
call TPluginCommand('command! SyntasticToggleMode', 'syntastic', 'syntastic')
call TPluginCommand('command! -nargs=? -complete=custom,s:CompleteCheckerName SyntasticCheck', 'syntastic', 'syntastic')
call TPluginCommand('command! Errors', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticStatuslineFlag', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticMake', 'syntastic', 'syntastic')
call TPluginFunction('SyntasticErrorBalloonExpr', 'syntastic', 'syntastic')
call TPluginFunction('g:SyntasticAddToErrors', 'syntastic', 'syntastic')
call TPluginRegisterRepo('tabular')
call TPluginRegisterPlugin('tabular', 'Tabular')
call TPluginCommand('com! -nargs=+ -bang AddTabularPattern', 'tabular', 'Tabular')
call TPluginFunction('AddTabularPattern', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=+ -bang AddTabularPipeline', 'tabular', 'Tabular')
call TPluginFunction('AddTabularPipeline', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=* -range -complete=customlist,<SID>CompleteTabularizeCommand Tabularize', 'tabular', 'Tabular')
call TPluginFunction('Tabularize', 'tabular', 'Tabular')
call TPluginCommand('com! -nargs=* -range=% -complete=customlist,<SID>CompleteTabularizeCommand GTabularize', 'tabular', 'Tabular')
call TPluginRegisterPlugin('tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarToggle', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarOpen', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarOpenAutoClose', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarClose', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=1 -bang TagbarSetFoldlevel', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarShowTag', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarCurrentTag', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=1 TagbarGetTypeConfig', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=? TagbarDebug', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarDebugEnd', 'tagbar', 'tagbar')
call TPluginCommand('command! -nargs=0 TagbarTogglePause', 'tagbar', 'tagbar')
call TPluginRegisterRepo('tcomment_vim')
call TPluginRegisterPlugin('tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment', 'tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs', 'tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight', 'tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock', 'tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline', 'tcomment_vim', 'tcomment')
call TPluginCommand('command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline', 'tcomment_vim', 'tcomment')
call TPluginRegisterRepo('templator_vim')
call TPluginRegisterPlugin('templator_vim', 'templator')
call TPluginCommand('command! -complete=customlist,templator#Complete -nargs=+ Templator', 'templator_vim', 'templator')
call TPluginRegisterRepo('tlib_vim')
call TPluginRegisterPlugin('tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TRequire', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TLet', 'tlib_vim', '02tlib')
call TPluginCommand('command! -bar -nargs=* -bang TScratch', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TVarArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=+ TKeyArg', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TBrowseOutput', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=0 -complete=command TBrowseScriptnames', 'tlib_vim', '02tlib')
call TPluginCommand('command! -nargs=1 -complete=command TTimeCommand', 'tlib_vim', '02tlib')
call TPluginRegisterPlugin('tskeleton_vim', 'tskeleton')
call TPluginFunction('TSkeletonMapGoToNextTag', 'tskeleton_vim', 'tskeleton')
call TPluginFunction('TSkeletonMapHyperComplete', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonSetup', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=custom,tskeleton#SelectTemplate TSkeletonEdit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=customlist,tskeleton#EditBitCompletion TSkeletonEditBit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonNewFile', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -bar -nargs=? TSkeletonBitReset', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! -nargs=? -complete=custom,tskeleton#SelectBit TSkeletonBit', 'tskeleton_vim', 'tskeleton')
call TPluginCommand('command! TSkeletonCleanUpBibEntry', 'tskeleton_vim', 'tskeleton')
call TPluginRegisterPlugin('vcscommand.vim', 'vcsbzr')
call TPluginRegisterPlugin('vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <buffer> <Plug>VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetVCSType', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandChdir', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandChangeToCurrentFileDir', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetOriginalBuffer', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandRegisterModule', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandDoCommand', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetOption', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandDisableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandEnableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandGetStatusLine', 'vcscommand.vim', 'vcscommand')
call TPluginFunction('VCSCommandSetVCSType', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSAdd', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* -bang VCSAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* -bang VCSBlame', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=? -bang VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSDelete', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSDiff', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 -bang VCSGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSInfo', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSLock', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSLog', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSRemove', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 VCSRevert', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=? VCSReview', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSStatus', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSUnlock', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=0 VCSUpdate', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! -nargs=* VCSVimDiff', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSCommandDisableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSCommandEnableBufferSetup', 'vcscommand.vim', 'vcscommand')
call TPluginCommand('com! VCSReload', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSAdd', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSCommit', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSDelete', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSDiff', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSClearAndGotoOriginal', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSInfo', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSLock', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSLog', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSRevert', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSReview', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSSplitAnnotate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSStatus', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSUnlock', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSUpdate', 'vcscommand.vim', 'vcscommand')
call TPluginMap('nnoremap <silent> <Plug>VCSVimDiff', 'vcscommand.vim', 'vcscommand')
call TPluginRegisterPlugin('vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSEdit', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSEditors', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSUnedit', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! -nargs=1 CVSWatch', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchAdd', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchOn', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchOff', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchRemove', 'vcscommand.vim', 'vcscvs')
call TPluginCommand('com! CVSWatchers', 'vcscommand.vim', 'vcscvs')
call TPluginRegisterPlugin('vcscommand.vim', 'vcsgit')
call TPluginRegisterPlugin('vcscommand.vim', 'vcshg')
call TPluginRegisterPlugin('vcscommand.vim', 'vcssvk')
call TPluginRegisterPlugin('vcscommand.vim', 'vcssvn')
call TPluginRegisterRepo('vim-autoclose')
call TPluginRegisterPlugin('vim-autoclose', 'AutoClose')
call TPluginFunction('AutoClose#ParsePairs', 'vim-autoclose', 'AutoClose')
call TPluginFunction('AutoClose#DefaultPairs', 'vim-autoclose', 'AutoClose')
call TPluginFunction('AutoClose#DefaultPairsModified', 'vim-autoclose', 'AutoClose')
call TPluginCommand('command! AutoCloseOn', 'vim-autoclose', 'AutoClose')
call TPluginCommand('command! AutoCloseOff', 'vim-autoclose', 'AutoClose')
call TPluginCommand('command! AutoCloseToggle', 'vim-autoclose', 'AutoClose')
call TPluginRegisterRepo('vim-autocomplpop-13')
call TPluginRegisterPlugin('vim-autocomplpop-13', 'acp')
call TPluginRegisterRepo('vim-backbone')
call TPluginRegisterPlugin('vim-backbone', 'backbone')
call TPluginFunction('backbone#compl', 'vim-backbone', 'backbone')
call TPluginFunction('backbone#triggerCompl', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BGenerate', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BCollection', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BRouter', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BModel', 'vim-backbone', 'backbone')
call TPluginCommand('command! -nargs=* BView', 'vim-backbone', 'backbone')
call TPluginRegisterPlugin('vim-codeoverview', 'CodeOverview')
call TPluginFunction('ShowCodeOverviewParams', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! CodeOverviewNoAuto', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! CodeOverviewAuto', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! SnapshotFile', 'vim-codeoverview', 'CodeOverview')
call TPluginFunction('CodeOverviewJumpToBufferLine', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! -nargs=? SnapshotFile', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! DumpAllColorSchemes', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! ShowCodeOverview', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! ShowCodeOverviewAscii', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! HideCodeOverview', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! ToggleCodeOverview', 'vim-codeoverview', 'CodeOverview')
call TPluginCommand('command! LoadTextOverview', 'vim-codeoverview', 'CodeOverview')
call TPluginRegisterPlugin('vim-csharp', 'cs')
call TPluginFunction('MsProjFile', 'vim-csharp', 'cs')
call TPluginFunction('MsVersion', 'vim-csharp', 'cs')
call TPluginFunction('IISExpress', 'vim-csharp', 'cs')
call TPluginCommand('com! -complete=file -nargs=1 MsProjFile', 'vim-csharp', 'cs')
call TPluginCommand('com! -nargs=1 MsVersion', 'vim-csharp', 'cs')
call TPluginCommand('com! IISExpress', 'vim-csharp', 'cs')
call TPluginRegisterRepo('vim-dispatch')
call TPluginRegisterPlugin('vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete Dispatch', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete FocusDispatch', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=file Make', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang -nargs=* -complete=custom,dispatch#command_complete Start', 'vim-dispatch', 'dispatch')
call TPluginCommand('command! -bang Copen', 'vim-dispatch', 'dispatch')
call TPluginFunction('DispatchComplete', 'vim-dispatch', 'dispatch')
call TPluginRegisterRepo('vim-endwise')
call TPluginRegisterPlugin('vim-endwise', 'endwise')
call TPluginMap('imap <script> <Plug>DiscretionaryEnd', 'vim-endwise', 'endwise')
call TPluginMap('imap <script> <Plug>AlwaysEnd', 'vim-endwise', 'endwise')
call TPluginRegisterRepo('vim-fswitch')
call TPluginRegisterPlugin('vim-fswitch', 'fswitch')
call TPluginFunction('FSReturnReadableCompanionFilename', 'vim-fswitch', 'fswitch')
call TPluginFunction('FSReturnCompanionFilenameString', 'vim-fswitch', 'fswitch')
call TPluginFunction('FSwitch', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSHere', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSRight', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSSplitRight', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSLeft', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSSplitLeft', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSAbove', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSSplitAbove', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSBelow', 'vim-fswitch', 'fswitch')
call TPluginCommand('com! FSSplitBelow', 'vim-fswitch', 'fswitch')
call TPluginRegisterRepo('vim-fugitive')
call TPluginRegisterPlugin('vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#is_git_dir', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#extract_git_dir', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#detect', 'vim-fugitive', 'fugitive')
TPluginAfter \V\\vim-fugitive\\plugin\\ call TPluginVimEnter("fugitive")
call TPluginFunction('fugitive#repo', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#buffer', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#reload_status', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#statusline', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#head', 'vim-fugitive', 'fugitive')
call TPluginFunction('fugitive#foldtext', 'vim-fugitive', 'fugitive')
call TPluginRegisterRepo('vim-html5validator')
call TPluginRegisterPlugin('vim-html5validator', 'html5validator')
call TPluginCommand('command! -complete=file -nargs=0 HTML5Validate', 'vim-html5validator', 'html5validator')
call TPluginRegisterRepo('vim-indent-guides')
call TPluginRegisterPlugin('vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesToggle', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesEnable', 'vim-indent-guides', 'indent_guides')
call TPluginCommand('command! -bar IndentGuidesDisable', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesToggle', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesEnable', 'vim-indent-guides', 'indent_guides')
call TPluginMap('nnoremap <unique><script> <Plug>IndentGuidesDisable', 'vim-indent-guides', 'indent_guides')
TPluginAfter \V\\vim-indent-guides\\plugin\\ call TPluginVimEnter("indent_guides")
call TPluginRegisterRepo('vim-indent-object')
call TPluginRegisterPlugin('vim-indent-object', 'indent-object')
call TPluginRegisterRepo('vim-indexer')
call TPluginRegisterPlugin('vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerInfo', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerFiles', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerRebuild', 'vim-indexer', 'indexer')
call TPluginCommand('command -nargs=? -complete=file IndexerFilesAvail', 'vim-indexer', 'indexer')
call TPluginRegisterPlugin('vim-lua-ftplugin', 'lua-ftplugin')
call TPluginCommand('command! -bar LuaCheckSyntax', 'vim-lua-ftplugin', 'lua-ftplugin')
call TPluginCommand('command! -bar -bang LuaCheckGlobals', 'vim-lua-ftplugin', 'lua-ftplugin')
call TPluginRegisterRepo('vim-lua-inspect')
call TPluginRegisterPlugin('vim-lua-inspect', 'luainspect')
call TPluginCommand('command! -bar -bang LuaInspect', 'vim-lua-inspect', 'luainspect')
call TPluginCommand('command! -bar LuaInspectToggle', 'vim-lua-inspect', 'luainspect')
call TPluginFunction('LuaInspectToolTip', 'vim-lua-inspect', 'luainspect')
call TPluginRegisterRepo('vim-matchit')
call TPluginRegisterPlugin('vim-matchit', 'matchit')
call TPluginRegisterRepo('vim-multiple-cursors')
call TPluginRegisterPlugin('vim-multiple-cursors', 'multiple_cursors')
call TPluginCommand('command! -nargs=1 -range=% MultipleCursorsFind', 'vim-multiple-cursors', 'multiple_cursors')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc')
call TPluginCommand('command -bar -bang -nargs=+ ViewDoc', 'vim-plugin-viewdoc', 'viewdoc')
call TPluginFunction('ViewDoc', 'vim-plugin-viewdoc', 'viewdoc')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_help')
call TPluginCommand('command -bar -bang -nargs=1 -complete=help ViewDocHelp', 'vim-plugin-viewdoc', 'viewdoc_help')
call TPluginFunction('ViewDoc_help', 'vim-plugin-viewdoc', 'viewdoc_help')
call TPluginFunction('ViewDoc_help_custom', 'vim-plugin-viewdoc', 'viewdoc_help')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_infman')
call TPluginCommand('command -bar -bang -nargs=1 -complete=custom,s:CompleteInfman ViewDocInfman', 'vim-plugin-viewdoc', 'viewdoc_infman')
call TPluginFunction('ViewDoc_infman', 'vim-plugin-viewdoc', 'viewdoc_infman')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_man')
call TPluginCommand('command -bar -bang -nargs=1 -complete=custom,s:CompleteMan ViewDocMan', 'vim-plugin-viewdoc', 'viewdoc_man')
call TPluginFunction('ViewDoc_man', 'vim-plugin-viewdoc', 'viewdoc_man')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_perldoc')
call TPluginCommand('command -bar -bang -nargs=1 -complete=custom,s:CompletePerl ViewDocPerl', 'vim-plugin-viewdoc', 'viewdoc_perldoc')
call TPluginFunction('ViewDoc_perldoc', 'vim-plugin-viewdoc', 'viewdoc_perldoc')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_pman')
call TPluginCommand('command -bar -bang -nargs=1 -complete=custom,s:CompleteMan ViewDocPman', 'vim-plugin-viewdoc', 'viewdoc_pman')
call TPluginFunction('ViewDoc_pman', 'vim-plugin-viewdoc', 'viewdoc_pman')
call TPluginRegisterPlugin('vim-plugin-viewdoc', 'viewdoc_pydoc')
call TPluginCommand('command -bar -bang -nargs=1 -complete=custom,s:CompletePydoc ViewDocPydoc', 'vim-plugin-viewdoc', 'viewdoc_pydoc')
call TPluginFunction('ViewDoc_pydoc', 'vim-plugin-viewdoc', 'viewdoc_pydoc')
call TPluginRegisterRepo('vim-powerline')
call TPluginRegisterPlugin('vim-powerline', 'Powerline')
call TPluginCommand('command! PowerlineClearCache', 'vim-powerline', 'Powerline')
call TPluginCommand('command! PowerlineReloadColorscheme', 'vim-powerline', 'Powerline')
TPluginAfter \V\\vim-powerline\\plugin\\ call TPluginVimEnter("PowerlineStartup")
call TPluginRegisterRepo('vim-project')
call TPluginRegisterPlugin('vim-project', 'project')
call TPluginFunction('ProjFoldText', 'vim-project', 'project')
call TPluginFunction('Project_GetAllFnames', 'vim-project', 'project')
call TPluginFunction('Project_GetFname', 'vim-project', 'project')
call TPluginFunction('Project_ForEach', 'vim-project', 'project')
call TPluginMap('nnoremap <script> <Plug>ProjectOnly', 'vim-project', 'project')
call TPluginCommand('command -nargs=? -complete=file Project', 'vim-project', 'project')
call TPluginMap('nnoremap <script> <Plug>ToggleProject', 'vim-project', 'project')
call TPluginRegisterRepo('vim-protodef')
call TPluginRegisterPlugin('vim-protodef', 'protodef')
call TPluginFunction('protodef#ReturnSkeletonsFromPrototypesForCurrentBuffer', 'vim-protodef', 'protodef')
call TPluginFunction('protodef#MakeMapping', 'vim-protodef', 'protodef')
call TPluginRegisterRepo('vim-ragtag')
call TPluginRegisterPlugin('vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagHtmlComplete', 'vim-ragtag', 'ragtag')
call TPluginFunction('RagtagInit', 'vim-ragtag', 'ragtag')
call TPluginFunction('AllmlInit', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagBSUrl', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagBSXml', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagUrlEncode', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagXmlEncode', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagUrlV', 'vim-ragtag', 'ragtag')
call TPluginMap('inoremap <silent> <Plug>ragtagXmlV', 'vim-ragtag', 'ragtag')
call TPluginRegisterRepo('vim-reload')
call TPluginRegisterPlugin('vim-reload', 'reload')
call TPluginCommand('command! -bar -nargs=? -complete=file ReloadScript', 'vim-reload', 'reload')
call TPluginRegisterRepo('vim-scmdiff')
call TPluginRegisterPlugin('vim-scmdiff', 'scmdiff')
call TPluginMap('noremap <unique> <script> <plug>Dh', 'vim-scmdiff', 'scmdiff')
call TPluginCommand('com! -bar -nargs=? D', 'vim-scmdiff', 'scmdiff')
call TPluginRegisterRepo('vim-session')
call TPluginRegisterPlugin('vim-session', 'session')
TPluginAfter \V\\vim-session\\plugin\\ call TPluginVimEnter("PluginSession")
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names OpenSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -nargs=? -complete=customlist,xolox#session#complete_names ViewSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SaveSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names DeleteSession', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang CloseSession', 'vim-session', 'session')
call TPluginCommand('command! -bang -nargs=* -complete=command RestartVim', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionOpen', 'vim-session', 'session')
call TPluginCommand('command! -bar -nargs=? -complete=customlist,xolox#session#complete_names SessionView', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionSave', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SessionDelete', 'vim-session', 'session')
call TPluginCommand('command! -bar -bang SessionClose', 'vim-session', 'session')
call TPluginRegisterRepo('vim-shell')
call TPluginRegisterPlugin('vim-shell', 'shell')
call TPluginRegisterPlugin('vim-snipmate', 'snipMate')
call TPluginFunction('TriggerSnippet', 'vim-snipmate', 'snipMate')
call TPluginFunction('BackwardSnippet', 'vim-snipmate', 'snipMate')
call TPluginRegisterPlugin('vim-snipmate', 'snipMateInterface')
call TPluginCommand('command! SnipMateOpenSnippetFiles', 'vim-snipmate', 'snipMateInterface')
call TPluginRegisterRepo('vim-surround')
call TPluginRegisterPlugin('vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>SurroundRepeat', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Dsurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Csurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Yssurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSsurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>Ysurround', 'vim-surround', 'surround')
call TPluginMap('nnoremap <silent> <Plug>YSurround', 'vim-surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VSurround', 'vim-surround', 'surround')
call TPluginMap('vnoremap <silent> <Plug>VgSurround', 'vim-surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>Isurround', 'vim-surround', 'surround')
call TPluginMap('inoremap <silent> <Plug>ISurround', 'vim-surround', 'surround')
call TPluginRegisterRepo('vim-unimpaired')
call TPluginRegisterPlugin('vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedDirectoryNext', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedDirectoryPrevious', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nmap <silent> <Plug>unimpairedONext', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nmap <silent> <Plug>unimpairedOPrevious', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedContextPrevious', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedContextNext', 'vim-unimpaired', 'unimpaired')
call TPluginMap('onoremap <silent> <Plug>unimpairedContextPrevious', 'vim-unimpaired', 'unimpaired')
call TPluginMap('onoremap <silent> <Plug>unimpairedContextNext', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedBlankUp', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedBlankDown', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedMoveUp', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedMoveDown', 'vim-unimpaired', 'unimpaired')
call TPluginMap('xnoremap <silent> <Plug>unimpairedMoveUp', 'vim-unimpaired', 'unimpaired')
call TPluginMap('xnoremap <silent> <Plug>unimpairedMoveDown', 'vim-unimpaired', 'unimpaired')
call TPluginMap('nnoremap <silent> <Plug>unimpairedPaste', 'vim-unimpaired', 'unimpaired')
call TPluginFunction('UnimpairedMapTransform', 'vim-unimpaired', 'unimpaired')
call TPluginRegisterRepo('vim-visual-star-search')
call TPluginRegisterPlugin('vim-visual-star-search', 'visual-star-search')
call TPluginRegisterRepo('vimprj')
call TPluginRegisterPlugin('vimprj', 'vimprj')
call TPluginCommand('command -nargs=? -complete=file VimprjInfo', 'vimprj', 'vimprj')
call TPluginRegisterRepo('vimproc')
call TPluginRegisterPlugin('vimproc', 'vimproc')
call TPluginCommand('command! -nargs=+ -complete=shellcmd VimProcBang', 'vimproc', 'vimproc')
call TPluginCommand('command! -nargs=+ -complete=shellcmd VimProcRead', 'vimproc', 'vimproc')
call TPluginRegisterPlugin('vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShell', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellCreate', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellPop', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellTab', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellCurrentDir', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=? -complete=customlist,vimshell#complete VimShellBufferDir', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=+ -complete=customlist,vimshell#vimshell_execute_complete VimShellExecute', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=* -complete=customlist,vimshell#vimshell_execute_complete VimShellInteractive', 'vimshell', 'vimshell')
call TPluginCommand('command! -nargs=+ -complete=customlist,vimshell#vimshell_execute_complete VimShellTerminal', 'vimshell', 'vimshell')
call TPluginCommand('command! -range -nargs=? VimShellSendString', 'vimshell', 'vimshell')
call TPluginCommand('command! -complete=buffer -nargs=1 VimShellSendBuffer', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_split_switch)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_split_create)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_switch)', 'vimshell', 'vimshell')
call TPluginMap('nnoremap <silent> <Plug>(vimshell_create)', 'vimshell', 'vimshell')
